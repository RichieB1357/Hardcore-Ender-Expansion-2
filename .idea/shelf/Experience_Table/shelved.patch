Index: src/main/java/chylex/hee/init/ModBlocks.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package chylex.hee.init\r\nimport chylex.hee.HEE\r\nimport chylex.hee.game.block.BlockAncientCobweb\r\nimport chylex.hee.game.block.BlockBrewingStandCustom\r\nimport chylex.hee.game.block.BlockCauldronWithDragonsBreath\r\nimport chylex.hee.game.block.BlockCauldronWithGoo\r\nimport chylex.hee.game.block.BlockCorruptedEnergy\r\nimport chylex.hee.game.block.BlockDarkChest\r\nimport chylex.hee.game.block.BlockDeathFlowerDecaying\r\nimport chylex.hee.game.block.BlockDragonEggOverride\r\nimport chylex.hee.game.block.BlockDryVines\r\nimport chylex.hee.game.block.BlockDustyStoneBricks\r\nimport chylex.hee.game.block.BlockDustyStonePlain\r\nimport chylex.hee.game.block.BlockEndPlant\r\nimport chylex.hee.game.block.BlockEndPortalAcceptor\r\nimport chylex.hee.game.block.BlockEndPortalInner\r\nimport chylex.hee.game.block.BlockEndPortalOverride\r\nimport chylex.hee.game.block.BlockEndPowderOre\r\nimport chylex.hee.game.block.BlockEnderGoo\r\nimport chylex.hee.game.block.BlockEnderGooPurified\r\nimport chylex.hee.game.block.BlockEndersol\r\nimport chylex.hee.game.block.BlockEndium\r\nimport chylex.hee.game.block.BlockEnergyCluster\r\nimport chylex.hee.game.block.BlockEternalFire\r\nimport chylex.hee.game.block.BlockExperienceGateController\r\nimport chylex.hee.game.block.BlockExperienceGateOutline\r\nimport chylex.hee.game.block.BlockFallingObsidian\r\nimport chylex.hee.game.block.BlockFlowerPotCustom\r\nimport chylex.hee.game.block.BlockFlowerPotDeathFlowerDecaying\r\nimport chylex.hee.game.block.BlockGloomrock\r\nimport chylex.hee.game.block.BlockGloomtorch\r\nimport chylex.hee.game.block.BlockGraveDirt\r\nimport chylex.hee.game.block.BlockHumus\r\nimport chylex.hee.game.block.BlockIgneousPlate\r\nimport chylex.hee.game.block.BlockIgneousRockOre\r\nimport chylex.hee.game.block.BlockInfusedGlass\r\nimport chylex.hee.game.block.BlockInfusedTNT\r\nimport chylex.hee.game.block.BlockJarODust\r\nimport chylex.hee.game.block.BlockLootChest\r\nimport chylex.hee.game.block.BlockMinersBurialAltar\r\nimport chylex.hee.game.block.BlockPillarCustom\r\nimport chylex.hee.game.block.BlockPuzzleLogic\r\nimport chylex.hee.game.block.BlockScaffolding\r\nimport chylex.hee.game.block.BlockSimple\r\nimport chylex.hee.game.block.BlockSimpleShaped\r\nimport chylex.hee.game.block.BlockSimpleWithMapColor\r\nimport chylex.hee.game.block.BlockSkullCustom\r\nimport chylex.hee.game.block.BlockSlabCustom\r\nimport chylex.hee.game.block.BlockSpawnerObsidianTowers\r\nimport chylex.hee.game.block.BlockStairsCustom\r\nimport chylex.hee.game.block.BlockStardustOre\r\nimport chylex.hee.game.block.BlockTableBase\r\nimport chylex.hee.game.block.BlockTablePedestal\r\nimport chylex.hee.game.block.BlockTableTile\r\nimport chylex.hee.game.block.BlockVoidPortalCrafted\r\nimport chylex.hee.game.block.BlockVoidPortalInner\r\nimport chylex.hee.game.block.BlockVoidPortalStorage\r\nimport chylex.hee.game.block.BlockVoidPortalStorageCrafted\r\nimport chylex.hee.game.block.BlockWhitebarkLeaves\r\nimport chylex.hee.game.block.BlockWhitebarkLog\r\nimport chylex.hee.game.block.BlockWhitebarkSapling\r\nimport chylex.hee.game.block.entity.TileEntityAccumulationTable\r\nimport chylex.hee.game.block.fluid.FluidEnderGoo\r\nimport chylex.hee.game.block.fluid.FluidEnderGooPurified\r\nimport chylex.hee.game.block.info.BlockBuilders.buildAncientCobweb\r\nimport chylex.hee.game.block.info.BlockBuilders.buildBrewingStand\r\nimport chylex.hee.game.block.info.BlockBuilders.buildCauldron\r\nimport chylex.hee.game.block.info.BlockBuilders.buildCorruptedEnergy\r\nimport chylex.hee.game.block.info.BlockBuilders.buildDarkLoam\r\nimport chylex.hee.game.block.info.BlockBuilders.buildDragonEgg\r\nimport chylex.hee.game.block.info.BlockBuilders.buildDryVines\r\nimport chylex.hee.game.block.info.BlockBuilders.buildDustyStone\r\nimport chylex.hee.game.block.info.BlockBuilders.buildDustyStoneBricks\r\nimport chylex.hee.game.block.info.BlockBuilders.buildDustyStoneCracked\r\nimport chylex.hee.game.block.info.BlockBuilders.buildDustyStoneDamaged\r\nimport chylex.hee.game.block.info.BlockBuilders.buildEndPortalOverride\r\nimport chylex.hee.game.block.info.BlockBuilders.buildEndPowderOre\r\nimport chylex.hee.game.block.info.BlockBuilders.buildEndStone\r\nimport chylex.hee.game.block.info.BlockBuilders.buildEnderSol\r\nimport chylex.hee.game.block.info.BlockBuilders.buildEndermanHead\r\nimport chylex.hee.game.block.info.BlockBuilders.buildEndiumBlock\r\nimport chylex.hee.game.block.info.BlockBuilders.buildEndiumOre\r\nimport chylex.hee.game.block.info.BlockBuilders.buildEnergyCluster\r\nimport chylex.hee.game.block.info.BlockBuilders.buildEternalFire\r\nimport chylex.hee.game.block.info.BlockBuilders.buildEtherealLantern\r\nimport chylex.hee.game.block.info.BlockBuilders.buildExperienceGate\r\nimport chylex.hee.game.block.info.BlockBuilders.buildFlowerPot\r\nimport chylex.hee.game.block.info.BlockBuilders.buildGloomrock\r\nimport chylex.hee.game.block.info.BlockBuilders.buildGloomrockBricks\r\nimport chylex.hee.game.block.info.BlockBuilders.buildGloomrockSmooth\r\nimport chylex.hee.game.block.info.BlockBuilders.buildGloomtorch\r\nimport chylex.hee.game.block.info.BlockBuilders.buildGraveDirt\r\nimport chylex.hee.game.block.info.BlockBuilders.buildHumus\r\nimport chylex.hee.game.block.info.BlockBuilders.buildIgneousPlate\r\nimport chylex.hee.game.block.info.BlockBuilders.buildIgneousRockOre\r\nimport chylex.hee.game.block.info.BlockBuilders.buildInfusedGlass\r\nimport chylex.hee.game.block.info.BlockBuilders.buildJarODust\r\nimport chylex.hee.game.block.info.BlockBuilders.buildLootChest\r\nimport chylex.hee.game.block.info.BlockBuilders.buildMinersBurial\r\nimport chylex.hee.game.block.info.BlockBuilders.buildMinersBurialIndestructible\r\nimport chylex.hee.game.block.info.BlockBuilders.buildObsidian\r\nimport chylex.hee.game.block.info.BlockBuilders.buildObsidianVariation\r\nimport chylex.hee.game.block.info.BlockBuilders.buildObsidianVariationLit\r\nimport chylex.hee.game.block.info.BlockBuilders.buildPlant\r\nimport chylex.hee.game.block.info.BlockBuilders.buildPortalFrame\r\nimport chylex.hee.game.block.info.BlockBuilders.buildPortalFrameCrafted\r\nimport chylex.hee.game.block.info.BlockBuilders.buildPortalInner\r\nimport chylex.hee.game.block.info.BlockBuilders.buildPuzzleLogic\r\nimport chylex.hee.game.block.info.BlockBuilders.buildPuzzleWall\r\nimport chylex.hee.game.block.info.BlockBuilders.buildScaffolding\r\nimport chylex.hee.game.block.info.BlockBuilders.buildSpawnerObsidianTowers\r\nimport chylex.hee.game.block.info.BlockBuilders.buildStardustOre\r\nimport chylex.hee.game.block.info.BlockBuilders.buildTable\r\nimport chylex.hee.game.block.info.BlockBuilders.buildTablePedestal\r\nimport chylex.hee.game.block.info.BlockBuilders.buildVantablock\r\nimport chylex.hee.game.block.info.BlockBuilders.buildWhitebark\r\nimport chylex.hee.game.block.info.BlockBuilders.buildWhitebarkLeaves\r\nimport chylex.hee.game.block.info.BlockBuilders.buildWhitebarkPlanks\r\nimport chylex.hee.game.block.info.BlockBuilders.buildWhitebarkSapling\r\nimport chylex.hee.game.block.util.CustomSkulls\r\nimport chylex.hee.game.item.ItemAncientCobweb\r\nimport chylex.hee.game.item.ItemBlockFuel\r\nimport chylex.hee.game.item.ItemDeathFlower\r\nimport chylex.hee.game.item.ItemDragonEgg\r\nimport chylex.hee.game.item.ItemInfusedTNT\r\nimport chylex.hee.game.world.feature.basic.trees.types.AutumnTreeGenerator\r\nimport chylex.hee.init.ModCreativeTabs.OrderedCreativeTab\r\nimport chylex.hee.system.migration.Facing.NORTH\r\nimport chylex.hee.system.migration.Facing.SOUTH\r\nimport chylex.hee.system.migration.forge.SubscribeAllEvents\r\nimport chylex.hee.system.migration.forge.SubscribeEvent\r\nimport chylex.hee.system.migration.vanilla.BlockFire\r\nimport chylex.hee.system.migration.vanilla.BlockWall\r\nimport chylex.hee.system.migration.vanilla.Blocks\r\nimport chylex.hee.system.migration.vanilla.ItemBlock\r\nimport chylex.hee.system.util.facades.Resource\r\nimport chylex.hee.system.util.named\r\nimport chylex.hee.system.util.useVanillaName\r\nimport net.minecraft.block.Block\r\nimport net.minecraft.block.material.MaterialColor\r\nimport net.minecraft.fluid.Fluid\r\nimport net.minecraft.item.Item\r\nimport net.minecraft.item.ItemGroup\r\nimport net.minecraft.util.math.AxisAlignedBB\r\nimport net.minecraftforge.event.RegistryEvent\r\nimport net.minecraftforge.fml.common.Mod.EventBusSubscriber.Bus.MOD\r\nimport java.util.concurrent.Callable\r\n\r\n@SubscribeAllEvents(modid = HEE.ID, bus = MOD)\r\nobject ModBlocks{\r\n\t\r\n\t// Blocks: Building (Uncategorized)\r\n\t\r\n\t@JvmField val ETHEREAL_LANTERN = BlockSimple(buildEtherealLantern) named \"ethereal_lantern\"\r\n\t@JvmField val STONE_BRICK_WALL = BlockWall(Block.Properties.from(Blocks.STONE_BRICKS)) named \"stone_brick_wall\"\r\n\t@JvmField val INFUSED_GLASS    = BlockInfusedGlass(buildInfusedGlass) named \"infused_glass\"\r\n\t@JvmField val VANTABLOCK       = BlockSimple(buildVantablock) named \"vantablock\"\r\n\t@JvmField val ENDIUM_BLOCK     = BlockEndium(buildEndiumBlock) named \"endium_block\"\r\n\t@JvmField val ENDERSOL         = BlockEndersol(buildEnderSol) named \"endersol\"\r\n\t@JvmField val HUMUS            = BlockHumus(buildHumus) named \"humus\"\r\n\t\r\n\t// Blocks: Building (Gloomrock)\r\n\t\r\n\t@JvmField val GLOOMROCK                = BlockGloomrock(buildGloomrock) named \"gloomrock\"\r\n\t@JvmField val GLOOMROCK_BRICKS         = BlockGloomrock(buildGloomrockBricks) named \"gloomrock_bricks\"\r\n\t@JvmField val GLOOMROCK_BRICK_STAIRS   = BlockStairsCustom(GLOOMROCK_BRICKS) named \"gloomrock_brick_stairs\"\r\n\t@JvmField val GLOOMROCK_BRICK_SLAB     = BlockSlabCustom(buildGloomrockBricks) named \"gloomrock_brick_slab\"\r\n\t@JvmField val GLOOMROCK_SMOOTH         = BlockGloomrock(buildGloomrockSmooth) named \"gloomrock_smooth\"\r\n\t@JvmField val GLOOMROCK_SMOOTH_STAIRS  = BlockStairsCustom(GLOOMROCK_SMOOTH) named \"gloomrock_smooth_stairs\"\r\n\t@JvmField val GLOOMROCK_SMOOTH_SLAB    = BlockSlabCustom(buildGloomrockSmooth) named \"gloomrock_smooth_slab\"\r\n\t@JvmField val GLOOMROCK_SMOOTH_RED     = BlockGloomrock(buildGloomrockSmooth) named \"gloomrock_smooth_red\"\r\n\t@JvmField val GLOOMROCK_SMOOTH_ORANGE  = BlockGloomrock(buildGloomrockSmooth) named \"gloomrock_smooth_orange\"\r\n\t@JvmField val GLOOMROCK_SMOOTH_YELLOW  = BlockGloomrock(buildGloomrockSmooth) named \"gloomrock_smooth_yellow\"\r\n\t@JvmField val GLOOMROCK_SMOOTH_GREEN   = BlockGloomrock(buildGloomrockSmooth) named \"gloomrock_smooth_green\"\r\n\t@JvmField val GLOOMROCK_SMOOTH_CYAN    = BlockGloomrock(buildGloomrockSmooth) named \"gloomrock_smooth_cyan\"\r\n\t@JvmField val GLOOMROCK_SMOOTH_BLUE    = BlockGloomrock(buildGloomrockSmooth) named \"gloomrock_smooth_blue\"\r\n\t@JvmField val GLOOMROCK_SMOOTH_PURPLE  = BlockGloomrock(buildGloomrockSmooth) named \"gloomrock_smooth_purple\"\r\n\t@JvmField val GLOOMROCK_SMOOTH_MAGENTA = BlockGloomrock(buildGloomrockSmooth) named \"gloomrock_smooth_magenta\"\r\n\t@JvmField val GLOOMROCK_SMOOTH_WHITE   = BlockGloomrock(buildGloomrockSmooth) named \"gloomrock_smooth_white\"\r\n\t@JvmField val GLOOMTORCH               = BlockGloomtorch(buildGloomtorch) named \"gloomtorch\"\r\n\t\r\n\t// Blocks: Building (Dusty Stone)\r\n\t\r\n\t@JvmField val DUSTY_STONE                = BlockDustyStonePlain(buildDustyStone) named \"dusty_stone\"\r\n\t@JvmField val DUSTY_STONE_CRACKED        = BlockDustyStonePlain(buildDustyStoneCracked) named \"dusty_stone_cracked\"\r\n\t@JvmField val DUSTY_STONE_DAMAGED        = BlockDustyStonePlain(buildDustyStoneDamaged) named \"dusty_stone_damaged\"\r\n\t@JvmField val DUSTY_STONE_BRICKS         = BlockDustyStoneBricks(buildDustyStoneBricks) named \"dusty_stone_bricks\"\r\n\t@JvmField val DUSTY_STONE_CRACKED_BRICKS = BlockDustyStoneBricks(buildDustyStoneBricks) named \"dusty_stone_cracked_bricks\"\r\n\t@JvmField val DUSTY_STONE_BRICK_STAIRS   = BlockStairsCustom(DUSTY_STONE_BRICKS) named \"dusty_stone_brick_stairs\"\r\n\t@JvmField val DUSTY_STONE_BRICK_SLAB     = BlockSlabCustom(buildDustyStoneBricks) named \"dusty_stone_brick_slab\"\r\n\t\r\n\t// Blocks: Building (Obsidian)\r\n\t\r\n\t@JvmField val OBSIDIAN_STAIRS       = BlockStairsCustom(Blocks.OBSIDIAN) named \"obsidian_stairs\"\r\n\t@JvmField val OBSIDIAN_FALLING      = BlockFallingObsidian(buildObsidian) named \"obsidian_falling\"\r\n\t@JvmField val OBSIDIAN_SMOOTH       = BlockSimple(buildObsidianVariation) named \"obsidian_smooth\"\r\n\t@JvmField val OBSIDIAN_CHISELED     = BlockSimple(buildObsidianVariation) named \"obsidian_chiseled\"\r\n\t@JvmField val OBSIDIAN_PILLAR       = BlockPillarCustom(buildObsidianVariation) named \"obsidian_pillar\"\r\n\t@JvmField val OBSIDIAN_SMOOTH_LIT   = BlockSimple(buildObsidianVariationLit) named \"obsidian_smooth_lit\"\r\n\t@JvmField val OBSIDIAN_CHISELED_LIT = BlockSimple(buildObsidianVariationLit) named \"obsidian_chiseled_lit\"\r\n\t@JvmField val OBSIDIAN_PILLAR_LIT   = BlockPillarCustom(buildObsidianVariationLit) named \"obsidian_pillar_lit\"\r\n\t\r\n\t// Blocks: Building (End Stone)\r\n\t\r\n\t@JvmField val END_STONE_INFESTED  = BlockSimpleWithMapColor(buildEndStone, MaterialColor.RED) named \"end_stone_infested\"\r\n\t@JvmField val END_STONE_BURNED    = BlockSimpleWithMapColor(buildEndStone, MaterialColor.ADOBE /* RENAME ORANGE */) named \"end_stone_burned\"\r\n\t@JvmField val END_STONE_ENCHANTED = BlockSimpleWithMapColor(buildEndStone, MaterialColor.PURPLE) named \"end_stone_enchanted\"\r\n\t\r\n\t// Blocks: Building (Dark Loam)\r\n\t\r\n\t@JvmField val DARK_LOAM      = BlockSimple(buildDarkLoam) named \"dark_loam\"\r\n\t@JvmField val DARK_LOAM_SLAB = BlockSlabCustom(buildDarkLoam) named \"dark_loam_slab\"\r\n\t\r\n\t// Blocks: Building (Grave Dirt)\r\n\t\r\n\t@JvmField val GRAVE_DIRT_PLAIN      = BlockGraveDirt(buildGraveDirt) named \"grave_dirt\"\r\n\t@JvmField val GRAVE_DIRT_LOOT       = BlockGraveDirt(buildGraveDirt) named \"grave_dirt_loot\"\r\n\t@JvmField val GRAVE_DIRT_SPIDERLING = BlockGraveDirt.Spiderling(buildGraveDirt) named \"grave_dirt_spiderling\"\r\n\t\r\n\t// Blocks: Building (Wood)\r\n\t\r\n\t@JvmField val WHITEBARK_LOG    = BlockWhitebarkLog(buildWhitebark) named \"whitebark_log\"\r\n\t@JvmField val WHITEBARK        = BlockSimple(buildWhitebark) named \"whitebark\"\r\n\t@JvmField val WHITEBARK_PLANKS = BlockSimple(buildWhitebarkPlanks) named \"whitebark_planks\"\r\n\t@JvmField val WHITEBARK_STAIRS = BlockStairsCustom(WHITEBARK_PLANKS) named \"whitebark_stairs\"\r\n\t@JvmField val WHITEBARK_SLAB   = BlockSlabCustom(buildWhitebarkPlanks) named \"whitebark_slab\"\r\n\t\r\n\t// Blocks: Building (Miner's Burial)\r\n\t\r\n\t@JvmField val MINERS_BURIAL_BLOCK_PLAIN    = BlockSimple(buildMinersBurial) named \"miners_burial_block_plain\"\r\n\t@JvmField val MINERS_BURIAL_BLOCK_CHISELED = BlockSimple(buildMinersBurial) named \"miners_burial_block_chiseled\"\r\n\t@JvmField val MINERS_BURIAL_BLOCK_PILLAR   = BlockPillarCustom(buildMinersBurial) named \"miners_burial_block_pillar\"\r\n\t@JvmField val MINERS_BURIAL_BLOCK_JAIL     = BlockSimple(buildMinersBurialIndestructible) named \"miners_burial_block_jail\"\r\n\t@JvmField val MINERS_BURIAL_ALTAR          = BlockMinersBurialAltar(buildMinersBurialIndestructible) named \"miners_burial_altar\"\r\n\t\r\n\t// Blocks: Fluids\r\n\t\r\n\t@JvmField val ENDER_GOO          = BlockEnderGoo() named \"ender_goo\"\r\n\t@JvmField val PURIFIED_ENDER_GOO = BlockEnderGooPurified() named \"purified_ender_goo\"\r\n\t\r\n\t@JvmField val CAULDRON_ENDER_GOO          = BlockCauldronWithGoo(buildCauldron, ENDER_GOO) named \"cauldron_ender_goo\"\r\n\t@JvmField val CAULDRON_PURIFIED_ENDER_GOO = BlockCauldronWithGoo(buildCauldron, PURIFIED_ENDER_GOO) named \"cauldron_purified_ender_goo\"\r\n\t@JvmField val CAULDRON_DRAGONS_BREATH     = BlockCauldronWithDragonsBreath(buildCauldron) named \"cauldron_dragons_breath\"\r\n\t\r\n\t// Blocks: Interactive (Storage)\r\n\t\r\n\t@JvmField val JAR_O_DUST = BlockJarODust(buildJarODust) named \"jar_o_dust\"\r\n\t@JvmField val DARK_CHEST = BlockDarkChest(buildGloomrock) named \"dark_chest\"\r\n\t@JvmField val LOOT_CHEST = BlockLootChest(buildLootChest) named \"loot_chest\"\r\n\t\r\n\t// Blocks: Interactive (Puzzle)\r\n\t\r\n\t@JvmField val PUZZLE_WALL       = BlockSimple(buildPuzzleWall) named \"puzzle_block_wall\"\r\n\t@JvmField val PUZZLE_PLAIN      = BlockPuzzleLogic.Plain(buildPuzzleLogic) named \"puzzle_block_plain\"\r\n\t@JvmField val PUZZLE_BURST_3    = BlockPuzzleLogic.Burst(buildPuzzleLogic, radius = 1) named \"puzzle_block_burst_3\"\r\n\t@JvmField val PUZZLE_BURST_5    = BlockPuzzleLogic.Burst(buildPuzzleLogic, radius = 2) named \"puzzle_block_burst_5\"\r\n\t@JvmField val PUZZLE_REDIRECT_1 = BlockPuzzleLogic.Redirect(buildPuzzleLogic, arrayOf(NORTH)) named \"puzzle_block_redirect_1\"\r\n\t@JvmField val PUZZLE_REDIRECT_2 = BlockPuzzleLogic.Redirect(buildPuzzleLogic, arrayOf(NORTH, SOUTH)) named \"puzzle_block_redirect_2\"\r\n\t@JvmField val PUZZLE_REDIRECT_4 = BlockPuzzleLogic.RedirectAll(buildPuzzleLogic) named \"puzzle_block_redirect_4\"\r\n\t@JvmField val PUZZLE_TELEPORT   = BlockPuzzleLogic.Teleport(buildPuzzleLogic) named \"puzzle_block_teleport\"\r\n\t\r\n\t// Blocks: Interactive (Gates)\r\n\t\r\n\t@JvmField val EXPERIENCE_GATE            = BlockExperienceGateOutline(buildExperienceGate) named \"experience_gate\"\r\n\t@JvmField val EXPERIENCE_GATE_CONTROLLER = BlockExperienceGateController(buildExperienceGate) named \"experience_gate_controller\"\r\n\t\r\n\t// Blocks: Interactive (Uncategorized)\r\n\t\r\n\t@JvmField val INFUSED_TNT            = BlockInfusedTNT() named \"infused_tnt\"\r\n\t@JvmField val IGNEOUS_PLATE          = BlockIgneousPlate(buildIgneousPlate) named \"igneous_plate\"\r\n\t@JvmField val ENHANCED_BREWING_STAND = BlockBrewingStandCustom(buildBrewingStand) named \"enhanced_brewing_stand\"\r\n\t\r\n\t// Blocks: Ores\r\n\t\r\n\t@JvmField val END_POWDER_ORE   = BlockEndPowderOre(buildEndPowderOre) named \"end_powder_ore\"\r\n\t@JvmField val ENDIUM_ORE       = BlockEndium(buildEndiumOre) named \"endium_ore\"\r\n\t@JvmField val STARDUST_ORE     = BlockStardustOre(buildStardustOre) named \"stardust_ore\"\r\n\t@JvmField val IGNEOUS_ROCK_ORE = BlockIgneousRockOre(buildIgneousRockOre) named \"igneous_rock_ore\"\r\n\t\r\n\t// Blocks: Decorative (Trees)\r\n\t\r\n\t@JvmField val WHITEBARK_SAPLING_AUTUMN_BROWN       = BlockWhitebarkSapling(buildWhitebarkSapling, AutumnTreeGenerator.Brown) named \"autumn_sapling_brown\"\r\n\t@JvmField val WHITEBARK_SAPLING_AUTUMN_ORANGE      = BlockWhitebarkSapling(buildWhitebarkSapling, AutumnTreeGenerator.Orange) named \"autumn_sapling_orange\"\r\n\t@JvmField val WHITEBARK_SAPLING_AUTUMN_YELLOWGREEN = BlockWhitebarkSapling(buildWhitebarkSapling, AutumnTreeGenerator.YellowGreen) named \"autumn_sapling_yellowgreen\"\r\n\t\r\n\t@JvmField val WHITEBARK_LEAVES_AUTUMN_BROWN       = BlockWhitebarkLeaves(buildWhitebarkLeaves, MaterialColor.BROWN_TERRACOTTA) named \"autumn_leaves_brown\"\r\n\t@JvmField val WHITEBARK_LEAVES_AUTUMN_ORANGE      = BlockWhitebarkLeaves(buildWhitebarkLeaves, MaterialColor.ADOBE /* RENAME ORANGE */) named \"autumn_leaves_orange\"\r\n\t@JvmField val WHITEBARK_LEAVES_AUTUMN_YELLOWGREEN = BlockWhitebarkLeaves(buildWhitebarkLeaves, MaterialColor.YELLOW) named \"autumn_leaves_yellowgreen\"\r\n\t\r\n\t@JvmField val POTTED_WHITEBARK_SAPLING_AUTUMN_BROWN       = BlockFlowerPotCustom(buildFlowerPot, WHITEBARK_SAPLING_AUTUMN_BROWN) named \"potted_autumn_sapling_brown\"\r\n\t@JvmField val POTTED_WHITEBARK_SAPLING_AUTUMN_ORANGE      = BlockFlowerPotCustom(buildFlowerPot, WHITEBARK_SAPLING_AUTUMN_ORANGE) named \"potted_autumn_sapling_orange\"\r\n\t@JvmField val POTTED_WHITEBARK_SAPLING_AUTUMN_YELLOWGREEN = BlockFlowerPotCustom(buildFlowerPot, WHITEBARK_SAPLING_AUTUMN_YELLOWGREEN) named \"potted_autumn_sapling_yellowgreen\"\r\n\t\r\n\t// Blocks: Decorative (Plants)\r\n\t\r\n\t@JvmField val DEATH_FLOWER_DECAYING = BlockDeathFlowerDecaying(buildPlant) named \"death_flower\"\r\n\t@JvmField val DEATH_FLOWER_HEALED   = BlockEndPlant(buildPlant) named \"death_flower_healed\"\r\n\t@JvmField val DEATH_FLOWER_WITHERED = BlockEndPlant(buildPlant) named \"death_flower_withered\"\r\n\t\r\n\t@JvmField val POTTED_DEATH_FLOWER_DECAYING = BlockFlowerPotDeathFlowerDecaying(buildFlowerPot, DEATH_FLOWER_DECAYING) named \"potted_death_flower\"\r\n\t@JvmField val POTTED_DEATH_FLOWER_HEALED   = BlockFlowerPotCustom(buildFlowerPot, DEATH_FLOWER_HEALED) named \"potted_death_flower_healed\"\r\n\t@JvmField val POTTED_DEATH_FLOWER_WITHERED = BlockFlowerPotCustom(buildFlowerPot, DEATH_FLOWER_WITHERED) named \"potted_death_flower_withered\"\r\n\t\r\n\t// Blocks: Decorative (Uncategorized)\r\n\t\r\n\t@JvmField val ANCIENT_COBWEB     = BlockAncientCobweb(buildAncientCobweb) named \"ancient_cobweb\"\r\n\t@JvmField val DRY_VINES          = BlockDryVines(buildDryVines) named \"dry_vines\"\r\n\t@JvmField val ENDERMAN_HEAD      = BlockSkullCustom(CustomSkulls.Enderman, buildEndermanHead) named \"enderman_head\"\r\n\t@JvmField val ENDERMAN_WALL_HEAD = BlockSkullCustom.Wall(CustomSkulls.Enderman, buildEndermanHead) named \"enderman_wall_head\"\r\n\t\r\n\t// Blocks: Spawners\r\n\t\r\n\t@JvmField val SPAWNER_OBSIDIAN_TOWERS = BlockSpawnerObsidianTowers(buildSpawnerObsidianTowers) named \"spawner_obsidian_towers\"\r\n\t\r\n\t// Blocks: Portals\r\n\t\r\n\tprivate val portalFrameAABB = AxisAlignedBB(0.0, 0.0, 0.0, 1.0, 0.8125, 1.0)\r\n\t\r\n\t@JvmField val END_PORTAL_INNER    = BlockEndPortalInner(buildPortalInner) named \"end_portal_inner\"\r\n\t@JvmField val END_PORTAL_FRAME    = BlockSimpleShaped(buildPortalFrame, portalFrameAABB) named \"end_portal_frame\"\r\n\t@JvmField val END_PORTAL_ACCEPTOR = BlockEndPortalAcceptor(buildPortalFrame, portalFrameAABB) named \"end_portal_acceptor\"\r\n\t\r\n\t@JvmField val VOID_PORTAL_INNER   = BlockVoidPortalInner(buildPortalInner) named \"void_portal_inner\"\r\n\t@JvmField val VOID_PORTAL_FRAME   = BlockSimpleShaped(buildPortalFrame, portalFrameAABB) named \"void_portal_frame\"\r\n\t@JvmField val VOID_PORTAL_STORAGE = BlockVoidPortalStorage(buildPortalFrame, portalFrameAABB) named \"void_portal_storage\"\r\n\t\r\n\t@JvmField val VOID_PORTAL_FRAME_CRAFTED   = BlockVoidPortalCrafted(buildPortalFrameCrafted, portalFrameAABB) named \"void_portal_frame_crafted\"\r\n\t@JvmField val VOID_PORTAL_STORAGE_CRAFTED = BlockVoidPortalStorageCrafted(buildPortalFrameCrafted, portalFrameAABB) named \"void_portal_storage_crafted\"\r\n\t\r\n\t// Blocks: Energy\r\n\t\r\n\t@JvmField val ENERGY_CLUSTER   = BlockEnergyCluster(buildEnergyCluster) named \"energy_cluster\"\r\n\t@JvmField val CORRUPTED_ENERGY = BlockCorruptedEnergy(buildCorruptedEnergy) named \"corrupted_energy\"\r\n\t\r\n\t// Blocks: Tables\r\n\t\r\n\t@JvmField val TABLE_PEDESTAL            = BlockTablePedestal(buildTablePedestal) named \"table_pedestal\"\r\n\t@JvmField val TABLE_BASE_TIER_1         = BlockTableBase(buildTable, tier = 1, firstTier = 1) named \"table_base_tier_1\"\r\n\t@JvmField val TABLE_BASE_TIER_2         = BlockTableBase(buildTable, tier = 2, firstTier = 1) named \"table_base_tier_2\"\r\n\t@JvmField val TABLE_BASE_TIER_3         = BlockTableBase(buildTable, tier = 3, firstTier = 1) named \"table_base_tier_3\"\r\n\t@JvmField val ACCUMULATION_TABLE_TIER_1 = BlockTableTile(buildTable, \"accumulation_table\", TileEntityAccumulationTable::class.java, tier = 1, firstTier = 1) named \"accumulation_table_tier_1\"\r\n\t@JvmField val ACCUMULATION_TABLE_TIER_2 = BlockTableTile(buildTable, \"accumulation_table\", TileEntityAccumulationTable::class.java, tier = 2, firstTier = 1) named \"accumulation_table_tier_2\"\r\n\t@JvmField val ACCUMULATION_TABLE_TIER_3 = BlockTableTile(buildTable, \"accumulation_table\", TileEntityAccumulationTable::class.java, tier = 3, firstTier = 1) named \"accumulation_table_tier_3\"\r\n\t\r\n\t// Blocks: Utilities\r\n\t\r\n\t@JvmField val ETERNAL_FIRE = BlockEternalFire(buildEternalFire) named \"eternal_fire\"\r\n\t@JvmField val SCAFFOLDING  = BlockScaffolding(buildScaffolding) named \"scaffolding\"\r\n\t\r\n\t// Registry\r\n\t\r\n\tprivate val itemBlockBaseProps\r\n\t\tget() = Item.Properties().group(ModCreativeTabs.main)\r\n\t\r\n\tprivate val itemBlockDefaultProps = itemBlockBaseProps\r\n\tprivate val itemBlockPropsHidden = Item.Properties()\r\n\t\r\n\tprivate val basicItemBlock = { block: Block -> ItemBlock(block, itemBlockDefaultProps) }\r\n\tprivate val hiddenItemBlock = { block: Block -> ItemBlock(block, itemBlockPropsHidden) }\r\n\t\r\n\tprivate fun fuelItemBlock(burnTicks: Int): (Block) -> ItemBlock{\r\n\t\treturn { block -> ItemBlockFuel(block, itemBlockDefaultProps, burnTicks) }\r\n\t}\r\n\t\r\n\t@SubscribeEvent\r\n\tfun onRegisterFluids(e: RegistryEvent.Register<Fluid>){\r\n\t\twith(e.registry){\r\n\t\t\tregister(FluidEnderGoo.still)\r\n\t\t\tregister(FluidEnderGoo.flowing)\r\n\t\t\tregister(FluidEnderGooPurified.still)\r\n\t\t\tregister(FluidEnderGooPurified.flowing)\r\n\t\t}\r\n\t}\r\n\t\r\n\t@SubscribeEvent\r\n\tfun onRegisterBlocks(e: RegistryEvent.Register<Block>){\r\n\t\twith(e.registry){\r\n\t\t\tregister(ETHEREAL_LANTERN with basicItemBlock)\r\n\t\t\tregister(STONE_BRICK_WALL with basicItemBlock)\r\n\t\t\tregister(INFUSED_GLASS with basicItemBlock)\r\n\t\t\tregister(VANTABLOCK with basicItemBlock)\r\n\t\t\tregister(ENDIUM_BLOCK with basicItemBlock)\r\n\t\t\tregister(ENDERSOL with basicItemBlock)\r\n\t\t\tregister(HUMUS with basicItemBlock)\r\n\t\t\t\r\n\t\t\tregister(GLOOMROCK with basicItemBlock)\r\n\t\t\tregister(GLOOMROCK_BRICKS with basicItemBlock)\r\n\t\t\tregister(GLOOMROCK_BRICK_STAIRS with basicItemBlock)\r\n\t\t\tregister(GLOOMROCK_BRICK_SLAB with basicItemBlock)\r\n\t\t\tregister(GLOOMROCK_SMOOTH with basicItemBlock)\r\n\t\t\tregister(GLOOMROCK_SMOOTH_STAIRS with basicItemBlock)\r\n\t\t\tregister(GLOOMROCK_SMOOTH_SLAB with basicItemBlock)\r\n\t\t\tregister(GLOOMROCK_SMOOTH_RED with basicItemBlock)\r\n\t\t\tregister(GLOOMROCK_SMOOTH_ORANGE with basicItemBlock)\r\n\t\t\tregister(GLOOMROCK_SMOOTH_YELLOW with basicItemBlock)\r\n\t\t\tregister(GLOOMROCK_SMOOTH_GREEN with basicItemBlock)\r\n\t\t\tregister(GLOOMROCK_SMOOTH_CYAN with basicItemBlock)\r\n\t\t\tregister(GLOOMROCK_SMOOTH_BLUE with basicItemBlock)\r\n\t\t\tregister(GLOOMROCK_SMOOTH_PURPLE with basicItemBlock)\r\n\t\t\tregister(GLOOMROCK_SMOOTH_MAGENTA with basicItemBlock)\r\n\t\t\tregister(GLOOMROCK_SMOOTH_WHITE with basicItemBlock)\r\n\t\t\tregister(GLOOMTORCH with basicItemBlock)\r\n\t\t\t\r\n\t\t\tregister(DUSTY_STONE with basicItemBlock)\r\n\t\t\tregister(DUSTY_STONE_CRACKED with basicItemBlock)\r\n\t\t\tregister(DUSTY_STONE_DAMAGED with basicItemBlock)\r\n\t\t\tregister(DUSTY_STONE_BRICKS with basicItemBlock)\r\n\t\t\tregister(DUSTY_STONE_CRACKED_BRICKS with basicItemBlock)\r\n\t\t\tregister(DUSTY_STONE_BRICK_STAIRS with basicItemBlock)\r\n\t\t\tregister(DUSTY_STONE_BRICK_SLAB with basicItemBlock)\r\n\t\t\t\r\n\t\t\tregister(OBSIDIAN_STAIRS with basicItemBlock)\r\n\t\t\tregister(OBSIDIAN_FALLING with basicItemBlock)\r\n\t\t\tregister(OBSIDIAN_SMOOTH with basicItemBlock)\r\n\t\t\tregister(OBSIDIAN_CHISELED with basicItemBlock)\r\n\t\t\tregister(OBSIDIAN_PILLAR with basicItemBlock)\r\n\t\t\tregister(OBSIDIAN_SMOOTH_LIT with basicItemBlock)\r\n\t\t\tregister(OBSIDIAN_CHISELED_LIT with basicItemBlock)\r\n\t\t\tregister(OBSIDIAN_PILLAR_LIT with basicItemBlock)\r\n\t\t\t\r\n\t\t\tregister(END_STONE_INFESTED with basicItemBlock)\r\n\t\t\tregister(END_STONE_BURNED with basicItemBlock)\r\n\t\t\tregister(END_STONE_ENCHANTED with basicItemBlock)\r\n\t\t\t\r\n\t\t\tregister(DARK_LOAM with basicItemBlock)\r\n\t\t\tregister(DARK_LOAM_SLAB with basicItemBlock)\r\n\t\t\t\r\n\t\t\tregister(GRAVE_DIRT_PLAIN with basicItemBlock)\r\n\t\t\tregister(GRAVE_DIRT_LOOT with basicItemBlock)\r\n\t\t\tregister(GRAVE_DIRT_SPIDERLING with basicItemBlock)\r\n\t\t\t\r\n\t\t\tregister(WHITEBARK_LOG with basicItemBlock)\r\n\t\t\tregister(WHITEBARK with basicItemBlock)\r\n\t\t\tregister(WHITEBARK_PLANKS with basicItemBlock)\r\n\t\t\tregister(WHITEBARK_STAIRS with basicItemBlock)\r\n\t\t\tregister(WHITEBARK_SLAB with fuelItemBlock(burnTicks = 150))\r\n\t\t\t\r\n\t\t\tregister(MINERS_BURIAL_BLOCK_PLAIN with basicItemBlock)\r\n\t\t\tregister(MINERS_BURIAL_BLOCK_CHISELED with basicItemBlock)\r\n\t\t\tregister(MINERS_BURIAL_BLOCK_PILLAR with basicItemBlock)\r\n\t\t\tregister(MINERS_BURIAL_BLOCK_JAIL with basicItemBlock)\r\n\t\t\tregister(MINERS_BURIAL_ALTAR with basicItemBlock)\r\n\t\t\t\r\n\t\t\tregister(ENDER_GOO)\r\n\t\t\tregister(PURIFIED_ENDER_GOO)\r\n\t\t\tregister(CAULDRON_ENDER_GOO)\r\n\t\t\tregister(CAULDRON_PURIFIED_ENDER_GOO)\r\n\t\t\tregister(CAULDRON_DRAGONS_BREATH)\r\n\t\t\t\r\n\t\t\tregister(JAR_O_DUST with { ItemBlock(it, itemBlockBaseProps.maxStackSize(1).setTEISR { Callable { ModRendering.RENDER_ITEM_JAR_O_DUST } }) })\r\n\t\t\tregister(DARK_CHEST with { ItemBlock(it, itemBlockBaseProps.setTEISR { Callable { ModRendering.RENDER_ITEM_DARK_CHEST } }) })\r\n\t\t\tregister(LOOT_CHEST with { ItemBlock(it, itemBlockBaseProps.setTEISR { Callable { ModRendering.RENDER_ITEM_LOOT_CHEST } }) })\r\n\t\t\t\r\n\t\t\tregister(PUZZLE_WALL with basicItemBlock)\r\n\t\t\tregister(PUZZLE_PLAIN with basicItemBlock)\r\n\t\t\tregister(PUZZLE_BURST_3 with basicItemBlock)\r\n\t\t\tregister(PUZZLE_BURST_5 with basicItemBlock)\r\n\t\t\tregister(PUZZLE_REDIRECT_1 with basicItemBlock)\r\n\t\t\tregister(PUZZLE_REDIRECT_2 with basicItemBlock)\r\n\t\t\tregister(PUZZLE_REDIRECT_4 with basicItemBlock)\r\n\t\t\tregister(PUZZLE_TELEPORT with basicItemBlock)\r\n\t\t\t\r\n\t\t\tregister(INFUSED_TNT with ItemInfusedTNT(INFUSED_TNT, itemBlockPropsHidden))\r\n\t\t\tregister(IGNEOUS_PLATE with basicItemBlock)\r\n\t\t\tregister(ENHANCED_BREWING_STAND with basicItemBlock)\r\n\t\t\tregister(EXPERIENCE_GATE with basicItemBlock)\r\n\t\t\tregister(EXPERIENCE_GATE_CONTROLLER)\r\n\t\t\t\r\n\t\t\tregister(END_POWDER_ORE with basicItemBlock)\r\n\t\t\tregister(ENDIUM_ORE with basicItemBlock)\r\n\t\t\tregister(STARDUST_ORE with basicItemBlock)\r\n\t\t\tregister(IGNEOUS_ROCK_ORE with basicItemBlock)\r\n\t\t\t\r\n\t\t\tregister(WHITEBARK_LEAVES_AUTUMN_BROWN with basicItemBlock)\r\n\t\t\tregister(WHITEBARK_LEAVES_AUTUMN_ORANGE with basicItemBlock)\r\n\t\t\tregister(WHITEBARK_LEAVES_AUTUMN_YELLOWGREEN with basicItemBlock)\r\n\t\t\tregister(WHITEBARK_SAPLING_AUTUMN_BROWN with fuelItemBlock(burnTicks = 100))\r\n\t\t\tregister(WHITEBARK_SAPLING_AUTUMN_ORANGE with fuelItemBlock(burnTicks = 100))\r\n\t\t\tregister(WHITEBARK_SAPLING_AUTUMN_YELLOWGREEN with fuelItemBlock(burnTicks = 100))\r\n\t\t\tregister(POTTED_WHITEBARK_SAPLING_AUTUMN_BROWN)\r\n\t\t\tregister(POTTED_WHITEBARK_SAPLING_AUTUMN_ORANGE)\r\n\t\t\tregister(POTTED_WHITEBARK_SAPLING_AUTUMN_YELLOWGREEN)\r\n\t\t\t\r\n\t\t\tregister(DEATH_FLOWER_DECAYING with { ItemDeathFlower(it, itemBlockDefaultProps) })\r\n\t\t\tregister(DEATH_FLOWER_HEALED with basicItemBlock)\r\n\t\t\tregister(DEATH_FLOWER_WITHERED with basicItemBlock)\r\n\t\t\tregister(POTTED_DEATH_FLOWER_DECAYING)\r\n\t\t\tregister(POTTED_DEATH_FLOWER_HEALED)\r\n\t\t\tregister(POTTED_DEATH_FLOWER_WITHERED)\r\n\t\t\t\r\n\t\t\tregister(ANCIENT_COBWEB with { ItemAncientCobweb(it, itemBlockDefaultProps) })\r\n\t\t\tregister(DRY_VINES with basicItemBlock)\r\n\t\t\tregister(ENDERMAN_HEAD)\r\n\t\t\t\r\n\t\t\tregister(SPAWNER_OBSIDIAN_TOWERS)\r\n\t\t\t\r\n\t\t\tregister(END_PORTAL_INNER)\r\n\t\t\tregister(END_PORTAL_FRAME with basicItemBlock)\r\n\t\t\tregister(END_PORTAL_ACCEPTOR with basicItemBlock)\r\n\t\t\tregister(VOID_PORTAL_INNER)\r\n\t\t\tregister(VOID_PORTAL_FRAME with basicItemBlock)\r\n\t\t\tregister(VOID_PORTAL_STORAGE with basicItemBlock)\r\n\t\t\tregister(VOID_PORTAL_FRAME_CRAFTED with hiddenItemBlock)\r\n\t\t\tregister(VOID_PORTAL_STORAGE_CRAFTED with hiddenItemBlock)\r\n\t\t\t\r\n\t\t\tregister(ENERGY_CLUSTER with basicItemBlock)\r\n\t\t\tregister(CORRUPTED_ENERGY)\r\n\t\t\t\r\n\t\t\tregister(TABLE_PEDESTAL with basicItemBlock)\r\n\t\t\tregister(TABLE_BASE_TIER_1 with basicItemBlock)\r\n\t\t\tregister(TABLE_BASE_TIER_2 with basicItemBlock)\r\n\t\t\tregister(TABLE_BASE_TIER_3 with basicItemBlock)\r\n\t\t\tregister(ACCUMULATION_TABLE_TIER_1 with basicItemBlock)\r\n\t\t\tregister(ACCUMULATION_TABLE_TIER_2 with basicItemBlock)\r\n\t\t\tregister(ACCUMULATION_TABLE_TIER_3 with basicItemBlock)\r\n\t\t\t\r\n\t\t\tregister(ETERNAL_FIRE)\r\n\t\t\tregister(SCAFFOLDING with basicItemBlock)\r\n\t\t}\r\n\t\t\r\n\t\t// vanilla modifications\r\n\t\t\r\n\t\twith(e.registry){\r\n\t\t\tregister(BlockEndPortalOverride(buildEndPortalOverride).apply { override(Blocks.END_PORTAL){ null } })\r\n\t\t\tregister(BlockBrewingStandCustom(buildBrewingStand).apply { override(Blocks.BREWING_STAND){ ItemBlock(it, Item.Properties().group(ItemGroup.BREWING)) } })\r\n\t\t\tregister(BlockDragonEggOverride(buildDragonEgg).apply { override(Blocks.DRAGON_EGG){ ItemDragonEgg(it, itemBlockDefaultProps) } })\r\n\t\t}\r\n\t}\r\n\t\r\n\t@SubscribeEvent\r\n\tfun onRegisterItemBlocks(e: RegistryEvent.Register<Item>){\r\n\t\ttemporaryItemBlocks.forEach(e.registry::register)\r\n\t\ttemporaryItemBlocks.clear()\r\n\t\t\r\n\t\t// fire\r\n\t\t\r\n\t\twith(Blocks.FIRE as BlockFire){\r\n\t\t\tsetFireInfo(WHITEBARK_LOG, 5, 5)\r\n\t\t\tsetFireInfo(WHITEBARK, 5, 5)\r\n\t\t\tsetFireInfo(WHITEBARK_PLANKS, 5, 20)\r\n\t\t\tsetFireInfo(WHITEBARK_STAIRS, 5, 20)\r\n\t\t\tsetFireInfo(WHITEBARK_SLAB, 5, 20)\r\n\t\t\t\r\n\t\t\tsetFireInfo(WHITEBARK_LEAVES_AUTUMN_BROWN, 30, 60)\r\n\t\t\tsetFireInfo(WHITEBARK_LEAVES_AUTUMN_ORANGE, 30, 60)\r\n\t\t\tsetFireInfo(WHITEBARK_LEAVES_AUTUMN_YELLOWGREEN, 30, 60)\r\n\t\t\t\r\n\t\t\tsetFireInfo(INFUSED_TNT, 15, 100)\r\n\t\t\t\r\n\t\t\tsetFireInfo(ANCIENT_COBWEB, 100, 300)\r\n\t\t\tsetFireInfo(DRY_VINES, 100, 300)\r\n\t\t}\r\n\t\t\r\n\t\t// vanilla modifications\r\n\t\t\r\n\t\tBlocks.END_PORTAL_FRAME.asItem().group = null\r\n\t}\r\n\t\r\n\t// Utilities\r\n\t\r\n\tprivate val temporaryItemBlocks = mutableListOf<ItemBlock>()\r\n\t\r\n\tprivate inline fun Block.override(vanillaBlock: Block, itemBlockConstructor: ((Block) -> ItemBlock?)){\r\n\t\tthis.useVanillaName(vanillaBlock)\r\n\t\titemBlockConstructor(this)?.let { with(it) }\r\n\t}\r\n\t\r\n\tprivate infix fun Block.with(itemBlock: ItemBlock) = apply {\r\n\t\tif (Resource.isVanilla(this.registryName!!)){\r\n\t\t\titemBlock.useVanillaName(this)\r\n\t\t}\r\n\t\telse{\r\n\t\t\titemBlock.registryName = this.registryName\r\n\t\t}\r\n\t\t\r\n\t\ttemporaryItemBlocks.add(itemBlock)\r\n\t\t(itemBlock.group as? OrderedCreativeTab)?.registerOrder(itemBlock)\r\n\t}\r\n\t\r\n\tprivate infix fun <T : Block> T.with(itemBlockConstructor: (T) -> ItemBlock): Block{\r\n\t\treturn with(itemBlockConstructor(this))\r\n\t}\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/chylex/hee/init/ModBlocks.kt	(revision 41aa0b6695a1ac98e2d75beae7cb260618fe1f25)
+++ src/main/java/chylex/hee/init/ModBlocks.kt	(date 1579751780014)
@@ -60,6 +60,7 @@
 import chylex.hee.game.block.BlockWhitebarkLog
 import chylex.hee.game.block.BlockWhitebarkSapling
 import chylex.hee.game.block.entity.TileEntityAccumulationTable
+import chylex.hee.game.block.entity.TileEntityExperienceTable
 import chylex.hee.game.block.fluid.FluidEnderGoo
 import chylex.hee.game.block.fluid.FluidEnderGooPurified
 import chylex.hee.game.block.info.BlockBuilders.buildAncientCobweb
@@ -341,6 +342,9 @@
 	@JvmField val ACCUMULATION_TABLE_TIER_1 = BlockTableTile(buildTable, "accumulation_table", TileEntityAccumulationTable::class.java, tier = 1, firstTier = 1) named "accumulation_table_tier_1"
 	@JvmField val ACCUMULATION_TABLE_TIER_2 = BlockTableTile(buildTable, "accumulation_table", TileEntityAccumulationTable::class.java, tier = 2, firstTier = 1) named "accumulation_table_tier_2"
 	@JvmField val ACCUMULATION_TABLE_TIER_3 = BlockTableTile(buildTable, "accumulation_table", TileEntityAccumulationTable::class.java, tier = 3, firstTier = 1) named "accumulation_table_tier_3"
+	@JvmField val EXPERIENCE_TABLE_TIER_1   = BlockTableTile(buildTable, "experience_table", TileEntityExperienceTable::class.java, tier = 1, firstTier = 1) named "experience_table_tier_1"
+	@JvmField val EXPERIENCE_TABLE_TIER_2   = BlockTableTile(buildTable, "experience_table", TileEntityExperienceTable::class.java, tier = 2, firstTier = 1) named "experience_table_tier_2"
+	@JvmField val EXPERIENCE_TABLE_TIER_3   = BlockTableTile(buildTable, "experience_table", TileEntityExperienceTable::class.java, tier = 3, firstTier = 1) named "experience_table_tier_3"
 	
 	// Blocks: Utilities
 	
@@ -513,6 +517,9 @@
 			register(ACCUMULATION_TABLE_TIER_1 with basicItemBlock)
 			register(ACCUMULATION_TABLE_TIER_2 with basicItemBlock)
 			register(ACCUMULATION_TABLE_TIER_3 with basicItemBlock)
+			register(EXPERIENCE_TABLE_TIER_1 with basicItemBlock)
+			register(EXPERIENCE_TABLE_TIER_2 with basicItemBlock)
+			register(EXPERIENCE_TABLE_TIER_3 with basicItemBlock)
 			
 			register(ETERNAL_FIRE)
 			register(SCAFFOLDING with basicItemBlock)
Index: src/main/resources/assets/hee/lang/en_us.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"block.hee.ethereal_lantern\": \"Ethereal Lantern\",\r\n  \"block.hee.stone_brick_wall\": \"Stone Brick Wall\",\r\n  \"block.hee.infused_glass\": \"Infused Glass\",\r\n  \"block.hee.vantablock\": \"Vantablock\",\r\n  \"block.hee.endium_block\": \"Endium Block\",\r\n  \"block.hee.endersol\": \"Endersol\",\r\n  \"block.hee.humus\": \"Humus\",\r\n\r\n  \"block.hee.gloomrock\": \"Gloomrock\",\r\n  \"block.hee.gloomrock_bricks\": \"Gloomrock Bricks\",\r\n  \"block.hee.gloomrock_brick_slab\": \"Gloomrock Brick Slab\",\r\n  \"block.hee.gloomrock_brick_stairs\": \"Gloomrock Brick Stairs\",\r\n  \"block.hee.gloomrock_smooth\": \"Smooth Gloomrock\",\r\n  \"block.hee.gloomrock_smooth_slab\": \"Smooth Gloomrock Slab\",\r\n  \"block.hee.gloomrock_smooth_stairs\": \"Smooth Gloomrock Stairs\",\r\n  \"block.hee.gloomrock_smooth_red\": \"Red Gloomrock\",\r\n  \"block.hee.gloomrock_smooth_orange\": \"Orange Gloomrock\",\r\n  \"block.hee.gloomrock_smooth_yellow\": \"Yellow Gloomrock\",\r\n  \"block.hee.gloomrock_smooth_green\": \"Green Gloomrock\",\r\n  \"block.hee.gloomrock_smooth_cyan\": \"Cyan Gloomrock\",\r\n  \"block.hee.gloomrock_smooth_blue\": \"Blue Gloomrock\",\r\n  \"block.hee.gloomrock_smooth_purple\": \"Purple Gloomrock\",\r\n  \"block.hee.gloomrock_smooth_magenta\": \"Magenta Gloomrock\",\r\n  \"block.hee.gloomrock_smooth_white\": \"White Gloomrock\",\r\n  \"block.hee.gloomtorch\": \"Gloomtorch\",\r\n\r\n  \"block.hee.dusty_stone\": \"Dusty Stone\",\r\n  \"block.hee.dusty_stone_cracked\": \"Cracked Dusty Stone\",\r\n  \"block.hee.dusty_stone_damaged\": \"Damaged Dusty Stone\",\r\n  \"block.hee.dusty_stone_bricks\": \"Dusty Stone Bricks\",\r\n  \"block.hee.dusty_stone_cracked_bricks\": \"Cracked Dusty Stone Bricks\",\r\n  \"block.hee.dusty_stone_brick_stairs\": \"Dusty Stone Brick Stairs\",\r\n  \"block.hee.dusty_stone_brick_slab\": \"Dusty Stone Brick Slab\",\r\n\r\n  \"block.hee.obsidian_stairs\": \"Obsidian Stairs\",\r\n  \"block.hee.obsidian_falling\": \"Falling Obsidian\",\r\n  \"block.hee.obsidian_smooth\": \"Smooth Obsidian\",\r\n  \"block.hee.obsidian_chiseled\": \"Chiseled Obsidian\",\r\n  \"block.hee.obsidian_pillar\": \"Obsidian Pillar\",\r\n  \"block.hee.obsidian_smooth_lit\": \"Smooth Obsidian (Lit)\",\r\n  \"block.hee.obsidian_chiseled_lit\": \"Chiseled Obsidian (Lit)\",\r\n  \"block.hee.obsidian_pillar_lit\": \"Obsidian Pillar (Lit)\",\r\n\r\n  \"block.hee.end_stone_infested\": \"Infested End Stone\",\r\n  \"block.hee.end_stone_burned\": \"Burned End Stone\",\r\n  \"block.hee.end_stone_enchanted\": \"Enchanted End Stone\",\r\n\r\n  \"block.hee.dark_loam\": \"Dark Loam\",\r\n  \"block.hee.dark_loam_slab\": \"Dark Loam Slab\",\r\n\r\n  \"block.hee.grave_dirt\": \"Grave Dirt\",\r\n  \"block.hee.grave_dirt_loot\": \"Grave Dirt (Loot)\",\r\n  \"block.hee.grave_dirt_spiderling\": \"Grave Dirt (Spiderling)\",\r\n\r\n  \"block.hee.whitebark_log\": \"Whitebark Log\",\r\n  \"block.hee.whitebark\": \"Whitebark\",\r\n  \"block.hee.whitebark_planks\": \"Whitebark Planks\",\r\n  \"block.hee.whitebark_stairs\": \"Whitebark Stairs\",\r\n  \"block.hee.whitebark_slab\": \"Whitebark Slab\",\r\n\r\n  \"block.hee.miners_burial_block_plain\": \"Miner's Burial Block\",\r\n  \"block.hee.miners_burial_block_chiseled\": \"Miner's Burial Block (Chiseled)\",\r\n  \"block.hee.miners_burial_block_pillar\": \"Miner's Burial Block (Pillar)\",\r\n  \"block.hee.miners_burial_block_jail\": \"Miner's Burial Block (Jail)\",\r\n  \"block.hee.miners_burial_altar\": \"Miner's Burial Altar\",\r\n\r\n  \"block.hee.jar_o_dust\": \"Jar o' Dust\",\r\n  \"block.hee.jar_o_dust.tooltip.entry\": \"§7%sx %s\",\r\n  \"block.hee.dark_chest\": \"Dark Chest\",\r\n  \"block.hee.loot_chest\": \"Loot Chest\",\r\n  \"block.hee.loot_chest.tooltip\": \"§5§o(Editable in creative mode)\",\r\n  \"block.hee.loot_chest.error_has_loot_table\": \"Cannot edit a Loot Chest that uses a predefined loot table\",\r\n\r\n  \"block.hee.puzzle_block_wall\": \"Puzzle Block (Wall)\",\r\n  \"block.hee.puzzle_block_plain\": \"Puzzle Block (Plain)\",\r\n  \"block.hee.puzzle_block_burst_3\": \"Puzzle Block (Burst 3x3)\",\r\n  \"block.hee.puzzle_block_burst_5\": \"Puzzle Block (Burst 5x5)\",\r\n  \"block.hee.puzzle_block_redirect_1\": \"Puzzle Block (Redirect 1)\",\r\n  \"block.hee.puzzle_block_redirect_2\": \"Puzzle Block (Redirect 2)\",\r\n  \"block.hee.puzzle_block_redirect_4\": \"Puzzle Block (Redirect 4)\",\r\n  \"block.hee.puzzle_block_teleport\": \"Puzzle Block (Teleport)\",\r\n\r\n  \"block.hee.experience_gate\": \"Experience Gate\",\r\n  \"block.hee.experience_gate_controller\": \"Experience Gate (Controller)\",\r\n\r\n  \"block.hee.igneous_plate\": \"Igneous Plate\",\r\n  \"block.hee.enhanced_brewing_stand\": \"Enhanced Brewing Stand\",\r\n\r\n  \"block.hee.end_powder_ore\": \"End Powder Ore\",\r\n  \"block.hee.endium_ore\": \"Endium Ore\",\r\n  \"block.hee.stardust_ore\": \"Stardust Ore\",\r\n  \"block.hee.igneous_rock_ore\": \"Igneous Rock Ore\",\r\n\r\n  \"block.hee.autumn_leaves_brown\": \"Autumn Leaves (Brown)\",\r\n  \"block.hee.autumn_leaves_orange\": \"Autumn Leaves (Orange)\",\r\n  \"block.hee.autumn_leaves_yellowgreen\": \"Autumn Leaves (Yellow-Green)\",\r\n  \"block.hee.autumn_sapling_brown\": \"Autumn Sapling (Brown)\",\r\n  \"block.hee.autumn_sapling_orange\": \"Autumn Sapling (Orange)\",\r\n  \"block.hee.autumn_sapling_yellowgreen\": \"Autumn Sapling (Yellow-Green)\",\r\n  \"block.hee.potted_autumn_sapling_brown\": \"Potted Autumn Sapling (Brown)\",\r\n  \"block.hee.potted_autumn_sapling_orange\": \"Potted Autumn Sapling (Orange)\",\r\n  \"block.hee.potted_autumn_sapling_yellowgreen\": \"Potted Autumn Sapling (Yellow-Green)\",\r\n\r\n  \"block.hee.death_flower\": \"Death Flower\",\r\n  \"block.hee.death_flower_healed\": \"Healed Death Flower\",\r\n  \"block.hee.death_flower_withered\": \"Withered Death Flower\",\r\n  \"block.hee.potted_death_flower\": \"Potted Death Flower\",\r\n  \"block.hee.potted_death_flower_healed\": \"Potted Healed Death Flower\",\r\n  \"block.hee.potted_death_flower_withered\": \"Potted Withered Death Flower\",\r\n\r\n  \"block.hee.ancient_cobweb\": \"Ancient Cobweb\",\r\n  \"block.hee.dry_vines\": \"Dry Vines\",\r\n  \"block.hee.enderman_head\": \"Enderman Head\",\r\n\r\n  \"block.hee.end_portal_inner\": \"End Portal\",\r\n  \"block.hee.end_portal_frame\": \"End Portal Frame\",\r\n  \"block.hee.end_portal_acceptor\": \"End Portal Acceptor\",\r\n  \"block.hee.void_portal_inner\": \"Void Portal\",\r\n  \"block.hee.void_portal_frame\": \"Void Portal Frame\",\r\n  \"block.hee.void_portal_storage\": \"Void Portal Storage\",\r\n\r\n  \"block.hee.energy_cluster\": \"Energy Cluster\",\r\n\r\n  \"block.hee.table_pedestal\": \"Table Pedestal\",\r\n  \"block.hee.table_base\": \"Table Base\",\r\n  \"block.hee.accumulation_table\": \"Accumulation Table\",\r\n\r\n  \"block.hee.eternal_fire\": \"Eternal Fire\",\r\n  \"block.hee.scaffolding\": \"Scaffolding\",\r\n\r\n  \"block.tooltip.hee.table.tier\": \"§7Tier %s\",\r\n\r\n  \"item.hee.ancient_dust\": \"Ancient Dust\",\r\n  \"item.hee.ethereum\": \"Ethereum\",\r\n  \"item.hee.end_powder\": \"End Powder\",\r\n  \"item.hee.stardust\": \"Stardust\",\r\n  \"item.hee.endium_ingot\": \"Endium Ingot\",\r\n  \"item.hee.endium_nugget\": \"Endium Nugget\",\r\n  \"item.hee.obsidian_fragment\": \"Obsidian Fragment\",\r\n  \"item.hee.igneous_rock\": \"Igneous Rock\",\r\n  \"item.hee.puzzle_medallion\": \"Puzzle Medallion\",\r\n  \"item.hee.infernium\": \"Infernium\",\r\n  \"item.hee.infernium_ingot\": \"Infernium Ingot\",\r\n  \"item.hee.auricion\": \"Auricion\",\r\n  \"item.hee.dragon_scale\": \"Dragon Scale\",\r\n\r\n  \"item.hee.alteration_nexus\": \"Alteration Nexus\",\r\n  \"item.hee.void_essence\": \"Void Essence\",\r\n  \"item.hee.obsidian_rod\": \"Obsidian Rod\",\r\n  \"item.hee.purity_extract\": \"Purity Extract\",\r\n  \"item.hee.static_core\": \"Static Core\",\r\n  \"item.hee.dirty_infernium_ingot\": \"Dirty Infernium Ingot\",\r\n  \"item.hee.revitalization_substance\": \"Revitalization Substance\",\r\n  \"item.hee.binding_essence\": \"Binding Essence\",\r\n\r\n  \"item.hee.eye_of_ender\": \"Eye of Ender\",\r\n  \"item.hee.compost\": \"Compost\",\r\n  \"item.hee.void_salad.single\": \"Void Salad\",\r\n  \"item.hee.void_salad.double\": \"Void Void Salad\",\r\n  \"item.hee.void_salad.mega\": \"Mega Void Salad\",\r\n\r\n  \"item.hee.table_link\": \"Table Link\",\r\n  \"item.hee.knowledge_note\": \"Knowledge Note\",\r\n\r\n  \"item.hee.void_miner\": \"Void Miner\",\r\n  \"item.hee.void_bucket\": \"Void Bucket\",\r\n  \"item.hee.scorching_pickaxe\": \"Scorching Pickaxe\",\r\n  \"item.hee.scorching_shovel\": \"Scorching Shovel\",\r\n  \"item.hee.scorching_axe\": \"Scorching Axe\",\r\n  \"item.hee.scorching_sword\": \"Scorching Sword\",\r\n  \"item.hee.flint_and_infernium\": \"Flint and Infernium\",\r\n\r\n  \"item.hee.ender_goo_bucket\": \"Ender Goo Bucket\",\r\n  \"item.hee.purified_ender_goo_bucket\": \"Purified Ender Goo Bucket\",\r\n\r\n  \"item.hee.energy_oracle\": \"Energy Oracle\",\r\n  \"item.hee.energy_receptacle\": \"Energy Receptacle\",\r\n  \"item.hee.energy_receptacle.tooltip.empty\": \"§9Empty\",\r\n  \"item.hee.energy_receptacle.tooltip.holding\": \"§9Holding §3%s§9 Energy\",\r\n\r\n  \"item.hee.spatial_dash_gem\": \"Spatial Dash Gem\",\r\n  \"item.hee.linking_gem\": \"Linking Gem\",\r\n  \"item.hee.portal_token\": \"Portal Token\",\r\n  \"item.hee.portal_token.tooltip.rare\": \"§7Rare\",\r\n  \"item.hee.portal_token.tooltip.solitary\": \"§7Solitary\",\r\n  \"item.hee.portal_token.tooltip.activate\": \"§6Right-click to activate\",\r\n  \"item.hee.portal_token.tooltip.creative.generate\": \"§6Hold and right-click to generate (creative)\",\r\n  \"item.hee.portal_token.tooltip.creative.teleport\": \"§6Hold and right-click to teleport (creative)\",\r\n  \"item.hee.portal_token.tooltip.advanced\": \"§7Index: %s\",\r\n  \"item.hee.portal_token_concrete\": \"Portal Token (%s)\",\r\n  \"item.hee.blank_token\": \"Blank Token\",\r\n\r\n  \"item.hee.trinket_pouch\": \"Trinket Pouch\",\r\n  \"item.hee.trinket_pouch.tooltip\": \"§7Right-click to open\",\r\n  \"item.hee.amulet_of_recovery\": \"Amulet of Recovery\",\r\n  \"item.hee.ring_of_hunger\": \"Ring of Hunger\",\r\n  \"item.hee.ring_of_preservation\": \"Ring of Preservation\",\r\n  \"item.hee.talisman_of_griefing\": \"Talisman of Griefing\",\r\n  \"item.hee.scale_of_freefall\": \"Scale of Freefall\",\r\n\r\n  \"item.hee.ender_eye_spawn_egg\": \"Spawn Ender Eye\",\r\n  \"item.hee.angry_enderman_spawn_egg\":\"Spawn Angry Enderman\",\r\n  \"item.hee.endermite_instability_spawn_egg\": \"Spawn Endermite (Instability)\",\r\n  \"item.hee.spiderling_spawn_egg\":\"Spawn Spiderling\",\r\n  \"item.hee.undread_spawn_egg\": \"Spawn Undread\",\r\n  \"item.hee.vampire_bat_spawn_egg\":\"Spawn Vampire Bat\",\r\n\r\n  \"item.hee.chorus_berry\": \"Chorus Berry\",\r\n  \"item.hee.shulker_box.tooltip\": \"§7Right-click to open\",\r\n\r\n  \"item.tooltip.hee.energy.level\": \"§9Energy: §3%s§9 / §3%s\",\r\n  \"item.tooltip.hee.energy.uses\": \"§9Uses Left: §3%s\",\r\n\r\n  \"item.tooltip.hee.trinket.in_slot.charged\": \"§aActive\",\r\n  \"item.tooltip.hee.trinket.in_slot.uncharged\": \"§cMust be recharged\",\r\n  \"item.tooltip.hee.trinket.not_in_slot.charged\": \"§cMust be placed in Trinket slot\",\r\n  \"item.tooltip.hee.trinket.not_in_slot.uncharged\": \"§cMust be charged and placed in Trinket slot\",\r\n\r\n  \"fluid.hee.ender_goo\": \"Ender Goo\",\r\n  \"fluid.hee.purified_ender_goo\": \"Purified Ender Goo\",\r\n\r\n  \"hee.infusions.list.title\": \"§aInfusions\",\r\n  \"hee.infusions.list.item\": \"§2- %s\",\r\n  \"hee.infusions.list.none\": \"§7None\",\r\n  \"hee.infusions.applicable.title\": \"§aApplicable To\",\r\n  \"hee.infusions.applicable.item\": \"§2- %s §3[%s]\",\r\n\r\n  \"hee.infusion.power\": \"Power\",\r\n  \"hee.infusion.fire\": \"Fire\",\r\n  \"hee.infusion.trap\": \"Trap\",\r\n  \"hee.infusion.mining\": \"Mining\",\r\n  \"hee.infusion.harmless\": \"Harmless\",\r\n  \"hee.infusion.phasing\": \"Phasing\",\r\n  \"hee.infusion.slow\": \"Slow\",\r\n  \"hee.infusion.riding\": \"Riding\",\r\n  \"hee.infusion.vigor\": \"Vigor\",\r\n  \"hee.infusion.capacity\": \"Capacity\",\r\n  \"hee.infusion.distance\": \"Distance\",\r\n  \"hee.infusion.speed\": \"Speed\",\r\n  \"hee.infusion.stability\": \"Stability\",\r\n  \"hee.infusion.safety\": \"Safety\",\r\n  \"hee.infusion.expansion\": \"Expansion\",\r\n\r\n  \"itemGroup.hee\": \"Hardcore Ender Expansion\",\r\n\r\n  \"hee.energy.overlay.health\": \"%s ENERGY CLUSTER\",\r\n  \"hee.energy.overlay.level\": \"HOLDING %s OUT OF %s ENERGY\",\r\n  \"hee.energy.overlay.ignored\": \"IGNORED\",\r\n\r\n  \"hee.energy.health.powered\": \"POWERED\",\r\n  \"hee.energy.health.healthy\": \"HEALTHY\",\r\n  \"hee.energy.health.weakened\": \"WEAKENED\",\r\n  \"hee.energy.health.tired\": \"TIRED\",\r\n  \"hee.energy.health.damaged\": \"DAMAGED\",\r\n  \"hee.energy.health.unstable\": \"UNSTABLE\",\r\n  \"hee.energy.health.revitalizing\": \"REVITALIZING\",\r\n\r\n  \"entity.hee.ender_eye\": \"Ender Eye\",\r\n  \"entity.hee.angry_enderman\": \"Angry Enderman\",\r\n  \"entity.hee.endermite_instability\": \"Endermite (Instability)\",\r\n  \"entity.hee.spiderling\": \"Spiderling\",\r\n  \"entity.hee.undread\": \"Undread\",\r\n  \"entity.hee.vampire_bat\": \"Vampire Bat\",\r\n  \"entity.hee.ender_pearl\": \"Ender Pearl\",\r\n\r\n  \"effect.hee.lifeless\": \"Lifeless\",\r\n  \"effect.hee.purity\": \"Purity\",\r\n\r\n  \"potion.effect.purity\": \"Potion of Purity\",\r\n  \"splash_potion.effect.purity\": \"Splash Potion of Purity\",\r\n  \"lingering_potion.effect.purity\": \"Lingering Potion of Purity\",\r\n  \"tipped_arrow.effect.purity\": \"Arrow of Purity\",\r\n\r\n  \"gui.hee.amulet_of_recovery.move_all\": \"Move All\",\r\n  \"gui.hee.loot_chest.title\": \"Loot Chest\",\r\n  \"gui.hee.loot_chest.title.creative\": \"Loot Chest (Editing)\",\r\n  \"gui.hee.portal_token_storage.title\": \"Portal Tokens\",\r\n  \"gui.hee.enhanced_brewing_stand.title\": \"Enhanced Brewing Stand\",\r\n\r\n  \"hee.territory.fallback.name\": \"Unknown\",\r\n  \"hee.territory.the_hub.name\": \"The Hub\",\r\n  \"hee.territory.forgotten_tombs.name\": \"Forgotten Tombs\",\r\n  \"hee.territory.obsidian_towers.name\": \"Obsidian Towers\",\r\n  \"hee.territory.arcane_conjunctions.name\": \"Arcane Conjunctions\",\r\n  \"hee.territory.lost_garden.name\": \"Lost Garden\",\r\n  \"hee.territory.ender_city.name\": \"Ender City\",\r\n  \"hee.territory.hostile_pass.name\": \"Hostile Pass\",\r\n  \"hee.territory.warded_mines.name\": \"Warded Mines\",\r\n  \"hee.territory.eternal_mists.name\": \"Eternal Mists\",\r\n  \"hee.territory.cursed_library.name\": \"Cursed Library\",\r\n  \"hee.territory.dragon_lair.name\": \"Dragon Lair\",\r\n\r\n  \"commands.hee.help.info\": \"shows command list\",\r\n  \"commands.hee.help.failed\": \"Page must be between 1 and %s\",\r\n  \"commands.hee.help.header.client\": \"§2--- Showing §aclient§2 commands, page %s§2 ---\",\r\n  \"commands.hee.help.header.admin\": \"§2--- Showing §aadmin§2 commands, page %s §2of %s§2 ---\",\r\n  \"commands.hee.help.header.debug\": \"§2--- Showing §adebug§2 commands, page %s §2of %s§2 ---\",\r\n  \"commands.hee.help.footer.start\": \"§2--- Navigate to: §r\",\r\n  \"commands.hee.help.footer.admin\": \"§a§nadmin commands\",\r\n  \"commands.hee.help.footer.prev\": \"previous page\",\r\n  \"commands.hee.help.footer.middle\": \"§2 / §r\",\r\n  \"commands.hee.help.footer.next\": \"next page\",\r\n  \"commands.hee.help.footer.end\": \"§2 ---\",\r\n\r\n  \"commands.hee.causatum.info\": \"checks or triggers Ender Causatum stages\",\r\n  \"commands.hee.causatum.check\": \"Ender Causatum stage: %s\",\r\n  \"commands.hee.causatum.trigger_success\": \"Ender Causatum stage updated\",\r\n  \"commands.hee.causatum.trigger_fail\": \"Failed updating Ender Causatum stage\",\r\n\r\n  \"commands.hee.infusions.info\": \"manipulates infusions on held item\",\r\n  \"commands.hee.infusions.reset_success\": \"Removed %s infusion(s)\",\r\n  \"commands.hee.infusions.add_success\": \"Added %s infusion\",\r\n  \"commands.hee.infusions.remove_success\": \"Removed %s infusion\",\r\n  \"commands.hee.infusions.no_held_item\": \"No item held in main hand\",\r\n  \"commands.hee.infusions.nothing_to_remove\": \"No infusions present on this item\",\r\n  \"commands.hee.infusions.not_applicable\": \"Infusion cannot be applied to this item\",\r\n  \"commands.hee.infusions.already_present\": \"Infusion is already present on this item\",\r\n  \"commands.hee.infusions.not_present\": \"Infusion is not present on this item\",\r\n\r\n  \"commands.hee.lootchest.info\": \"manipulates Loot Chests\",\r\n  \"commands.hee.lootchest.set_table_success\": \"Updated loot table\",\r\n  \"commands.hee.lootchest.remove_table_success\": \"Removed loot table\",\r\n  \"commands.hee.lootchest.reset_success\": \"Reset loot generated for %s player(s)\",\r\n  \"commands.hee.lootchest.table_not_found\": \"Loot table not found\",\r\n  \"commands.hee.lootchest.not_loot_chest\": \"No Loot Chest at the specified location\",\r\n\r\n  \"commands.hee.token.info\": \"generates a Portal Token item\",\r\n  \"commands.hee.token.success\": \"Created Portal Token leading to %s\",\r\n\r\n  \"commands.hee.structure.info\": \"utilities for custom structures\",\r\n  \"commands.hee.testworld.info\": \"converts overworld into a test world\",\r\n\r\n  \"subtitles.hee.block.igneous_plate.cool\": \"Igneous Plate cools\",\r\n  \"subtitles.hee.block.obsidian.land\": \"Obsidian landed\",\r\n  \"subtitles.item.revitalization_substance.use.success\": \"Revitalization Substance accepted\",\r\n  \"subtitles.item.revitalization_substance.use.fail\": \"Revitalization Substance rejected\",\r\n  \"subtitles.item.table_link.use.success\": \"Linking succeeds\",\r\n  \"subtitles.item.table_link.use.fail\": \"Linking fails\",\r\n  \"subtitles.hee.entity.revitalization_substance.heal\": \"Goo heals\",\r\n  \"subtitles.hee.entity.spatial_dash.expire\": \"Spatial Dash expires\",\r\n  \"subtitles.hee.mob.enderman.first_kill\": \"A feeling of coldness fills your existence\",\r\n  \"subtitles.hee.mob.undread.hurt\": \"Undread hurts\",\r\n  \"subtitles.hee.mob.undread.death\": \"Undread dies\"\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/assets/hee/lang/en_us.json	(revision 41aa0b6695a1ac98e2d75beae7cb260618fe1f25)
+++ src/main/resources/assets/hee/lang/en_us.json	(date 1579752390673)
@@ -125,6 +125,7 @@
   "block.hee.table_pedestal": "Table Pedestal",
   "block.hee.table_base": "Table Base",
   "block.hee.accumulation_table": "Accumulation Table",
+  "block.hee.experience_table": "Experience Table",
 
   "block.hee.eternal_fire": "Eternal Fire",
   "block.hee.scaffolding": "Scaffolding",
Index: src/main/java/chylex/hee/game/block/entity/TileEntityExperienceTable.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/chylex/hee/game/block/entity/TileEntityExperienceTable.kt	(date 1579751591742)
+++ src/main/java/chylex/hee/game/block/entity/TileEntityExperienceTable.kt	(date 1579751591742)
@@ -0,0 +1,112 @@
+package chylex.hee.game.block.entity
+import chylex.hee.game.block.entity.base.TileEntityBaseTable
+import chylex.hee.game.mechanics.dust.DustType
+import chylex.hee.game.mechanics.energy.IEnergyQuantity.Units
+import chylex.hee.game.mechanics.table.interfaces.ITableContext
+import chylex.hee.game.mechanics.table.interfaces.ITableInputTransformer.Companion.CONSUME_ONE
+import chylex.hee.game.mechanics.table.interfaces.ITableProcess
+import chylex.hee.game.mechanics.table.process.ProcessManyPedestals.State.Work
+import chylex.hee.game.mechanics.table.process.ProcessOnePedestal
+import chylex.hee.game.mechanics.table.process.ProcessSupportingItemBlocker
+import chylex.hee.game.mechanics.table.process.ProcessSupportingItemHolder
+import chylex.hee.game.mechanics.table.process.serializer.MultiProcessSerializer
+import chylex.hee.game.mechanics.table.process.serializer.MultiProcessSerializer.Companion.Mapping
+import chylex.hee.init.ModTileEntities
+import chylex.hee.system.migration.vanilla.Items
+import chylex.hee.system.util.TagCompound
+import chylex.hee.system.util.color.IntColor.Companion.RGB
+import chylex.hee.system.util.over
+import net.minecraft.item.ItemStack
+import net.minecraft.tileentity.TileEntityType
+import net.minecraft.util.math.BlockPos
+
+class TileEntityExperienceTable(type: TileEntityType<TileEntityExperienceTable>) : TileEntityBaseTable(type){
+	@Suppress("unused")
+	constructor() : this(ModTileEntities.EXPERIENCE_TABLE)
+	
+	override val tableIndicatorColor = RGB(220, 255, 55) // TODO
+	override val tableDustType = DustType.STARDUST
+	
+	override val processTickRate = 13
+	override val processSerializer = MultiProcessSerializer(
+		Mapping("Supporting", ::ProcessSupportingItemHolder),
+		Mapping("Blocking", ::ProcessSupportingItemBlocker),
+		Mapping("", ::Process)
+	)
+	
+	override fun createNewProcesses(unassignedPedestals: List<TileEntityTablePedestal>): List<ITableProcess>{
+		val newProcesses = ArrayList<ITableProcess>(1)
+		var hasSupportingItem = hasSupportingItem
+		
+		for(pedestal in unassignedPedestals){
+			if (pedestal.itemInputCopy.item === Items.GLASS_BOTTLE){
+				newProcesses.add(ProcessSupportingItemHolder(this, pedestal.pos))
+				hasSupportingItem = true
+			}
+			else if (pedestal.itemInputCopy.item === Items.DIAMOND){
+				if (totalFreePedestals - newProcesses.size <= 1 && !hasSupportingItem){
+					newProcesses.add(ProcessSupportingItemBlocker(this, pedestal.pos))
+				}
+				else{
+					newProcesses.add(Process(this, pedestal.pos, experience = 4, updates = 10))
+				}
+			}
+		}
+		
+		return newProcesses
+	}
+	
+	private class Process : ProcessOnePedestal{
+		constructor(table: TileEntityBaseTable, pos: BlockPos) : super(table, pos)
+		constructor(table: TileEntityBaseTable, nbt: TagCompound) : super(table, nbt)
+		
+		constructor(table: TileEntityBaseTable, pos: BlockPos, experience: Int, updates: Int) : this(table, pos){
+			this.experience = experience
+			this.updatesLeft = updates
+		}
+		
+		override val energyPerTick =
+			Units(1)
+		
+		override val dustPerTick =
+			1 over 6
+		
+		override val whenFinished =
+			CONSUME_ONE
+		
+		private var experience = 0
+		private var updatesLeft = 0
+		
+		override fun isInputStillValid(oldInput: ItemStack, newInput: ItemStack): Boolean{
+			return oldInput.item === newInput.item
+		}
+		
+		override fun onWorkTick(context: ITableContext, input: ItemStack): State{
+			if (updatesLeft == 0){
+				if (!context.requestUseSupportingItem(Items.GLASS_BOTTLE, 1)){
+					return Work.Blocked
+				}
+				
+				return Output(ItemStack(Items.EMERALD, experience)) // TODO
+			}
+			
+			if (!context.requestUseResources()){
+				return Work.Blocked
+			}
+			
+			--updatesLeft
+			return Work.Success
+		}
+		
+		override fun serializeNBT() = super.serializeNBT().apply {
+			putShort("Experience", experience.toShort())
+			putShort("UpdatesLeft", updatesLeft.toShort())
+		}
+		
+		override fun deserializeNBT(nbt: TagCompound) = with(nbt){
+			super.deserializeNBT(nbt)
+			experience = getShort("Experience").toInt()
+			updatesLeft = getShort("UpdatesLeft").toInt()
+		}
+	}
+}
Index: src/main/java/chylex/hee/game/mechanics/table/process/ProcessSupportingItemBlocker.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/chylex/hee/game/mechanics/table/process/ProcessSupportingItemBlocker.kt	(date 1579751491997)
+++ src/main/java/chylex/hee/game/mechanics/table/process/ProcessSupportingItemBlocker.kt	(date 1579751491997)
@@ -0,0 +1,50 @@
+package chylex.hee.game.mechanics.table.process
+import chylex.hee.game.block.entity.TileEntityTablePedestal
+import chylex.hee.game.block.entity.base.TileEntityBaseTable
+import chylex.hee.game.mechanics.energy.IEnergyQuantity.Units
+import chylex.hee.game.mechanics.table.PedestalStatusIndicator.Process.BLOCKED
+import chylex.hee.game.mechanics.table.interfaces.ITableContext
+import chylex.hee.game.mechanics.table.interfaces.ITableProcess
+import chylex.hee.game.mechanics.table.interfaces.ITableProcess.Companion.NO_DUST
+import chylex.hee.system.util.TagCompound
+import chylex.hee.system.util.getPos
+import chylex.hee.system.util.getTile
+import chylex.hee.system.util.putPos
+import net.minecraft.util.math.BlockPos
+import net.minecraft.world.World
+
+class ProcessSupportingItemBlocker(private val table: TileEntityBaseTable, pos: BlockPos) : ITableProcess{
+	constructor(table: TileEntityBaseTable, nbt: TagCompound) : this(table, nbt.getPos("PedestalPos"))
+	
+	override val pedestals = arrayOf(pos)
+	
+	override val energyPerTick = Units(0)
+	override val dustPerTick = NO_DUST
+	
+	private val pedestalTile
+		get() = pedestals[0].getTile<TileEntityTablePedestal>(table.wrld)
+	
+	// Handling
+	
+	override fun initialize(){
+		pedestalTile!!.updateProcessStatus(BLOCKED)
+	}
+	
+	override fun revalidate(): Boolean{
+		return pedestalTile?.hasInputItem == true
+	}
+	
+	override fun tick(context: ITableContext){}
+	
+	override fun dispose(){
+		pedestalTile?.updateProcessStatus(null)
+	}
+	
+	// Serialization
+	
+	override fun serializeNBT() = TagCompound().apply {
+		putPos("PedestalPos", pedestals[0])
+	}
+	
+	override fun deserializeNBT(nbt: TagCompound){}
+}
Index: src/main/java/chylex/hee/init/factory/TileEntityConstructors.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package chylex.hee.init.factory;\r\nimport chylex.hee.game.block.entity.TileEntityAccumulationTable;\r\nimport chylex.hee.game.block.entity.TileEntityBrewingStandCustom;\r\nimport chylex.hee.game.block.entity.TileEntityDarkChest;\r\nimport chylex.hee.game.block.entity.TileEntityEndPortalAcceptor;\r\nimport chylex.hee.game.block.entity.TileEntityEnergyCluster;\r\nimport chylex.hee.game.block.entity.TileEntityExperienceGate;\r\nimport chylex.hee.game.block.entity.TileEntityIgneousPlate;\r\nimport chylex.hee.game.block.entity.TileEntityInfusedTNT;\r\nimport chylex.hee.game.block.entity.TileEntityJarODust;\r\nimport chylex.hee.game.block.entity.TileEntityLootChest;\r\nimport chylex.hee.game.block.entity.TileEntityMinersBurialAltar;\r\nimport chylex.hee.game.block.entity.TileEntityPortalInner;\r\nimport chylex.hee.game.block.entity.TileEntitySpawnerObsidianTower;\r\nimport chylex.hee.game.block.entity.TileEntityTablePedestal;\r\nimport chylex.hee.game.block.entity.TileEntityVoidPortalStorage;\r\nimport net.minecraft.tileentity.TileEntity;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\nimport java.util.function.Supplier;\r\n\r\npublic final class TileEntityConstructors{\r\n\tprivate static final Map<Class<? extends TileEntity>, Supplier<? extends TileEntity>> all = new HashMap<>();\r\n\t\r\n\tstatic{\r\n\t\tadd(TileEntityAccumulationTable.class, TileEntityAccumulationTable::new);\r\n\t\tadd(TileEntityBrewingStandCustom.class, TileEntityBrewingStandCustom::new);\r\n\t\tadd(TileEntityDarkChest.class, TileEntityDarkChest::new);\r\n\t\tadd(TileEntityEndPortalAcceptor.class, TileEntityEndPortalAcceptor::new);\r\n\t\tadd(TileEntityEnergyCluster.class, TileEntityEnergyCluster::new);\r\n\t\tadd(TileEntityExperienceGate.class, TileEntityExperienceGate::new);\r\n\t\tadd(TileEntityIgneousPlate.class, TileEntityIgneousPlate::new);\r\n\t\tadd(TileEntityInfusedTNT.class, TileEntityInfusedTNT::new);\r\n\t\tadd(TileEntityJarODust.class, TileEntityJarODust::new);\r\n\t\tadd(TileEntityLootChest.class, TileEntityLootChest::new);\r\n\t\tadd(TileEntityMinersBurialAltar.class, TileEntityMinersBurialAltar::new);\r\n\t\tadd(TileEntityPortalInner.End.class, TileEntityPortalInner.End::new);\r\n\t\tadd(TileEntityPortalInner.Void.class, TileEntityPortalInner.Void::new);\r\n\t\tadd(TileEntitySpawnerObsidianTower.class, TileEntitySpawnerObsidianTower::new);\r\n\t\tadd(TileEntityTablePedestal.class, TileEntityTablePedestal::new);\r\n\t\tadd(TileEntityVoidPortalStorage.class, TileEntityVoidPortalStorage::new);\r\n\t}\r\n\t\r\n\t@SuppressWarnings(\"unchecked\")\r\n\tpublic static <T extends TileEntity> Supplier<T> get(Class<T> cls){\r\n\t\treturn (Supplier<T>)all.get(cls);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Ensures the class and constructor are compatible to catch typos.\r\n\t */\r\n\tprivate static <T extends TileEntity> void add(Class<T> cls, Supplier<T> constructor){\r\n\t\tall.put(cls, constructor);\r\n\t}\r\n\t\r\n\tprivate TileEntityConstructors(){}\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/chylex/hee/init/factory/TileEntityConstructors.java	(revision 41aa0b6695a1ac98e2d75beae7cb260618fe1f25)
+++ src/main/java/chylex/hee/init/factory/TileEntityConstructors.java	(date 1579751611861)
@@ -5,6 +5,7 @@
 import chylex.hee.game.block.entity.TileEntityEndPortalAcceptor;
 import chylex.hee.game.block.entity.TileEntityEnergyCluster;
 import chylex.hee.game.block.entity.TileEntityExperienceGate;
+import chylex.hee.game.block.entity.TileEntityExperienceTable;
 import chylex.hee.game.block.entity.TileEntityIgneousPlate;
 import chylex.hee.game.block.entity.TileEntityInfusedTNT;
 import chylex.hee.game.block.entity.TileEntityJarODust;
@@ -29,6 +30,7 @@
 		add(TileEntityEndPortalAcceptor.class, TileEntityEndPortalAcceptor::new);
 		add(TileEntityEnergyCluster.class, TileEntityEnergyCluster::new);
 		add(TileEntityExperienceGate.class, TileEntityExperienceGate::new);
+		add(TileEntityExperienceTable.class, TileEntityExperienceTable::new);
 		add(TileEntityIgneousPlate.class, TileEntityIgneousPlate::new);
 		add(TileEntityInfusedTNT.class, TileEntityInfusedTNT::new);
 		add(TileEntityJarODust.class, TileEntityJarODust::new);
Index: src/main/resources/assets/hee/blockstates/experience_table.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/assets/hee/blockstates/experience_table.json	(date 1579750426469)
+++ src/main/resources/assets/hee/blockstates/experience_table.json	(date 1579750426469)
@@ -0,0 +1,22 @@
+{
+  "forge_marker": 1,
+  "defaults": {
+    "textures": {
+      "overlay_top": "hee:block/accumulation_table_top",
+      "overlay_side": "hee:block/accumulation_table_side"
+    }
+  },
+  "variants": {
+    "tier": {
+      "1": {
+        "model": "hee:table_tier_1"
+      },
+      "2": {
+        "model": "hee:table_tier_2"
+      },
+      "3": {
+        "model": "hee:table_tier_3"
+      }
+    }
+  }
+}
Index: src/main/java/chylex/hee/game/block/entity/base/TileEntityBaseTable.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package chylex.hee.game.block.entity.base\r\nimport chylex.hee.game.block.BlockAbstractTable\r\nimport chylex.hee.game.block.entity.TileEntityJarODust\r\nimport chylex.hee.game.block.entity.TileEntityTablePedestal\r\nimport chylex.hee.game.block.entity.base.TileEntityBase.Context.STORAGE\r\nimport chylex.hee.game.mechanics.dust.DustLayers\r\nimport chylex.hee.game.mechanics.dust.DustType\r\nimport chylex.hee.game.mechanics.table.TableEnergyClusterHandler\r\nimport chylex.hee.game.mechanics.table.TableLinkedPedestalHandler\r\nimport chylex.hee.game.mechanics.table.TableParticleHandler\r\nimport chylex.hee.game.mechanics.table.TableProcessList\r\nimport chylex.hee.game.mechanics.table.interfaces.ITableContext\r\nimport chylex.hee.game.mechanics.table.interfaces.ITableProcess\r\nimport chylex.hee.game.mechanics.table.interfaces.ITableProcessSerializer\r\nimport chylex.hee.game.mechanics.table.process.ProcessSupportingItemHolder\r\nimport chylex.hee.system.util.NBTList.Companion.putList\r\nimport chylex.hee.system.util.TagCompound\r\nimport chylex.hee.system.util.color.IntColor\r\nimport chylex.hee.system.util.delegate.NotifyOnChange\r\nimport chylex.hee.system.util.getListOfCompounds\r\nimport chylex.hee.system.util.getState\r\nimport chylex.hee.system.util.getTile\r\nimport chylex.hee.system.util.use\r\nimport net.minecraft.item.Item\r\nimport net.minecraft.tileentity.TileEntityType\r\nimport org.apache.commons.lang3.math.Fraction\r\n\r\nabstract class TileEntityBaseTable(type: TileEntityType<out TileEntityBaseTable>) : TileEntityBaseSpecialFirstTick(type){\r\n\tprivate companion object{\r\n\t\tprivate const val MAX_CLUSTER_DISTANCE = 12\r\n\t\tprivate const val MAX_PEDESTAL_DISTANCE = 6\r\n\t\t\r\n\t\tprivate const val PROCESS_REFRESH_RATE = 10\r\n\t\t\r\n\t\tprivate const val PEDESTAL_INFO_TAG = \"PedestalInfo\"\r\n\t\tprivate const val CLUSTER_INFO_TAG = \"ClusterInfo\"\r\n\t\tprivate const val PROCESSES_TAG = \"Processes\"\r\n\t\tprivate const val DUST_FRACTION_N_TAG = \"DustAmountN\"\r\n\t\tprivate const val DUST_FRACTION_D_TAG = \"DustAmountD\"\r\n\t}\r\n\t\r\n\tvar maxInputPedestals = 0\r\n\t\tprivate set\r\n\t\r\n\tabstract val tableIndicatorColor: IntColor\r\n\topen val tableDustType: DustType? = null\r\n\t\r\n\tprotected abstract val processSerializer: ITableProcessSerializer\r\n\tprotected abstract val processTickRate: Int\r\n\t\r\n\tprivate var tickCounterRefresh = 0\r\n\tprivate var tickCounterProcessing = 0\r\n\t\r\n\tprivate val currentProcesses = TableProcessList()\r\n\tprivate var storedDust = Fraction.ZERO\r\n\t\r\n\t@Suppress(\"LeakingThis\")\r\n\tprivate val pedestalHandler = TableLinkedPedestalHandler(this, MAX_PEDESTAL_DISTANCE)\r\n\t\r\n\t@Suppress(\"LeakingThis\")\r\n\tprivate val clusterHandler = TableEnergyClusterHandler(this, MAX_CLUSTER_DISTANCE)\r\n\t\r\n\t@Suppress(\"LeakingThis\")\r\n\tval particleHandler = TableParticleHandler(this)\r\n\t\r\n\t// Utilities\r\n\t\r\n\tfun <T> MarkDirtyOnChange(initialValue: T) = NotifyOnChange(initialValue){\r\n\t\t-> if (isLoaded) markDirty()\r\n\t}\r\n\t\r\n\tprivate fun isPedestalBusy(pedestal: TileEntityTablePedestal): Boolean{\r\n\t\tval pos = pedestal.pos\r\n\t\treturn currentProcesses.any { process -> process.pedestals.contains(pos) }\r\n\t}\r\n\t\r\n\t// Behavior\r\n\t\r\n\toverride fun firstTick(){\r\n\t\tval state = pos.getState(wrld)\r\n\t\tval block = state.block as BlockAbstractTable\r\n\t\t\r\n\t\tmaxInputPedestals = when(block.tier - block.firstTier){\r\n\t\t\t2 -> 7\r\n\t\t\t1 -> 5\r\n\t\t\t0 -> 3\r\n\t\t\telse -> 0\r\n\t\t}\r\n\t}\r\n\t\r\n\tfinal override fun tick(){\r\n\t\tsuper.tick()\r\n\t\t\r\n\t\tif (wrld.isRemote || !wrld.isAreaLoaded(pos, MAX_CLUSTER_DISTANCE)){\r\n\t\t\treturn\r\n\t\t}\r\n\t\t\r\n\t\tif (++tickCounterRefresh >= PROCESS_REFRESH_RATE){\r\n\t\t\ttickCounterRefresh = 0\r\n\t\t\t\r\n\t\t\tval unassignedPedestals = pedestalHandler.inputPedestalTiles.filter { it.hasInputItem && !isPedestalBusy(it) }\r\n\t\t\t\r\n\t\t\tif (unassignedPedestals.isNotEmpty()){\r\n\t\t\t\tval newProcesses = createNewProcesses(unassignedPedestals)\r\n\t\t\t\t\r\n\t\t\t\tif (newProcesses.isNotEmpty()){\r\n\t\t\t\t\ttickCounterProcessing = 0\r\n\t\t\t\t\tcurrentProcesses.add(newProcesses)\r\n\t\t\t\t\tmarkDirty()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif (currentProcesses.revalidate()){\r\n\t\t\tmarkDirty()\r\n\t\t}\r\n\t\t\r\n\t\tif (++tickCounterProcessing >= processTickRate){\r\n\t\t\ttickCounterProcessing = 0\r\n\t\t\t\r\n\t\t\tif (currentProcesses.isNotEmpty){\r\n\t\t\t\tval isPaused = wrld.getRedstonePowerFromNeighbors(pos) > 0\r\n\t\t\t\t\r\n\t\t\t\tcurrentProcesses.remove {\r\n\t\t\t\t\tcreateProcessingContext(it, isPaused).apply(it::tick).isFinished\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tmarkDirty()\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tparticleHandler.tick(processTickRate)\r\n\t}\r\n\t\r\n\tfun onTableDestroyed(dropTableLink: Boolean){\r\n\t\tpedestalHandler.inputPedestalTiles.forEach { it.onTableDestroyed(this, dropTableLink) }\r\n\t\tpedestalHandler.dedicatedOutputPedestalTile?.onTableDestroyed(this, dropTableLink)\r\n\t\tpedestalHandler.onAllPedestalsUnlinked() // must reset state because the method is called twice if the player is in creative mode\r\n\t}\r\n\t\r\n\tfun tryLinkPedestal(pedestal: TileEntityTablePedestal): Boolean{\r\n\t\treturn pedestalHandler.tryLinkPedestal(pedestal)\r\n\t}\r\n\t\r\n\tfun tryUnlinkPedestal(pedestal: TileEntityTablePedestal, dropTableLink: Boolean): Boolean{\r\n\t\tcurrentProcesses.remove(pedestal)\r\n\t\treturn pedestalHandler.tryUnlinkPedestal(pedestal, dropTableLink)\r\n\t}\r\n\t\r\n\tfun tryMarkInputPedestalAsOutput(pedestal: TileEntityTablePedestal): Boolean{\r\n\t\tcurrentProcesses.remove(pedestal)\r\n\t\treturn pedestalHandler.tryMarkInputPedestalAsOutput(pedestal)\r\n\t}\r\n\t\r\n\t// Processing\r\n\t\r\n\tprotected abstract fun createNewProcesses(unassignedPedestals: List<TileEntityTablePedestal>): List<ITableProcess>\r\n\t\r\n\tprivate fun createProcessingContext(process: ITableProcess, isPaused: Boolean) = object : ITableContext{\r\n\t\tvar isFinished = false\r\n\t\t\r\n\t\toverride val isPaused = isPaused\r\n\t\t\r\n\t\toverride fun ensureDustAvailable(amount: Fraction): Boolean{\r\n\t\t\tif (amount == ITableProcess.NO_DUST || storedDust >= amount){\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tval dustType = tableDustType\r\n\t\t\tval jar = pos.up().getTile<TileEntityJarODust>(wrld)\r\n\t\t\t\r\n\t\t\tif (dustType == null || jar == null){\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\twhile(storedDust < amount){\r\n\t\t\t\tif (jar.layers.removeDust(DustLayers.Side.BOTTOM, dustType, 1).isEmpty){\r\n\t\t\t\t\treturn false\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tstoredDust = storedDust.add(Fraction.ONE)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn true\r\n\t\t}\r\n\t\t\r\n\t\toverride fun requestUseResources(): Boolean{\r\n\t\t\tif (clusterHandler.drainEnergy(process.energyPerTick)){\r\n\t\t\t\tstoredDust = storedDust.subtract(process.dustPerTick)\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn false\r\n\t\t}\r\n\t\t\r\n\t\toverride fun requestUseSupportingItem(item: Item, amount: Int): Boolean{\r\n\t\t\treturn currentProcesses.firstOrNull { it is ProcessSupportingItemHolder && it.useItem(item, amount) } != null\r\n\t\t}\r\n\t\t\r\n\t\toverride fun getOutputPedestal(candidate: TileEntityTablePedestal): TileEntityTablePedestal {\r\n\t\t\treturn pedestalHandler.dedicatedOutputPedestalTile ?: candidate\r\n\t\t}\r\n\t\t\r\n\t\toverride fun triggerWorkParticle(){\r\n\t\t\tparticleHandler.onPedestalsTicked(process.pedestals)\r\n\t\t}\r\n\t\t\r\n\t\toverride fun markProcessFinished(){\r\n\t\t\tisFinished = true\r\n\t\t}\r\n\t}\r\n\t\r\n\t// Serialization\r\n\t\r\n\toverride fun writeNBT(nbt: TagCompound, context: Context) = nbt.use {\r\n\t\tif (context == STORAGE){\r\n\t\t\tput(PEDESTAL_INFO_TAG, pedestalHandler.serializeNBT())\r\n\t\t\tput(CLUSTER_INFO_TAG, clusterHandler.serializeNBT())\r\n\t\t\tputList(PROCESSES_TAG, currentProcesses.serializeToList(processSerializer))\r\n\t\t\t\r\n\t\t\tputInt(DUST_FRACTION_N_TAG, storedDust.numerator)\r\n\t\t\tputInt(DUST_FRACTION_D_TAG, storedDust.denominator)\r\n\t\t}\r\n\t}\r\n\t\r\n\toverride fun readNBT(nbt: TagCompound, context: Context) = nbt.use {\r\n\t\tif (context == STORAGE){\r\n\t\t\tpedestalHandler.deserializeNBT(getCompound(PEDESTAL_INFO_TAG))\r\n\t\t\tclusterHandler.deserializeNBT(getCompound(CLUSTER_INFO_TAG))\r\n\t\t\tcurrentProcesses.deserializeFromList(this@TileEntityBaseTable, getListOfCompounds(PROCESSES_TAG), processSerializer)\r\n\t\t\t\r\n\t\t\tstoredDust = Fraction.getFraction(getInt(DUST_FRACTION_N_TAG), getInt(DUST_FRACTION_D_TAG))\r\n\t\t}\r\n\t}\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/chylex/hee/game/block/entity/base/TileEntityBaseTable.kt	(revision 41aa0b6695a1ac98e2d75beae7cb260618fe1f25)
+++ src/main/java/chylex/hee/game/block/entity/base/TileEntityBaseTable.kt	(date 1579750426667)
@@ -48,6 +48,12 @@
 	protected abstract val processSerializer: ITableProcessSerializer
 	protected abstract val processTickRate: Int
 	
+	protected val hasSupportingItem
+		get() = currentProcesses.any { it is ProcessSupportingItemHolder }
+	
+	protected val totalFreePedestals
+		get() = pedestalHandler.inputPedestalTiles.count { !isPedestalBusy(it) }
+	
 	private var tickCounterRefresh = 0
 	private var tickCounterProcessing = 0
 	
Index: src/main/java/chylex/hee/init/ModTileEntities.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package chylex.hee.init\r\nimport chylex.hee.HEE\r\nimport chylex.hee.game.block.entity.TileEntityAccumulationTable\r\nimport chylex.hee.game.block.entity.TileEntityBrewingStandCustom\r\nimport chylex.hee.game.block.entity.TileEntityDarkChest\r\nimport chylex.hee.game.block.entity.TileEntityEndPortalAcceptor\r\nimport chylex.hee.game.block.entity.TileEntityEnergyCluster\r\nimport chylex.hee.game.block.entity.TileEntityExperienceGate\r\nimport chylex.hee.game.block.entity.TileEntityIgneousPlate\r\nimport chylex.hee.game.block.entity.TileEntityInfusedTNT\r\nimport chylex.hee.game.block.entity.TileEntityJarODust\r\nimport chylex.hee.game.block.entity.TileEntityLootChest\r\nimport chylex.hee.game.block.entity.TileEntityMinersBurialAltar\r\nimport chylex.hee.game.block.entity.TileEntityPortalInner\r\nimport chylex.hee.game.block.entity.TileEntitySpawnerObsidianTower\r\nimport chylex.hee.game.block.entity.TileEntityTablePedestal\r\nimport chylex.hee.game.block.entity.TileEntityVoidPortalStorage\r\nimport chylex.hee.init.factory.TileEntityConstructors\r\nimport chylex.hee.system.migration.forge.SubscribeAllEvents\r\nimport chylex.hee.system.migration.forge.SubscribeEvent\r\nimport chylex.hee.system.util.named\r\nimport com.google.common.collect.ImmutableSet\r\nimport net.minecraft.block.Block\r\nimport net.minecraft.tileentity.TileEntity\r\nimport net.minecraft.tileentity.TileEntityType\r\nimport net.minecraftforge.event.RegistryEvent\r\nimport net.minecraftforge.fml.common.Mod.EventBusSubscriber.Bus.MOD\r\n\r\n@SubscribeAllEvents(modid = HEE.ID, bus = MOD)\r\nobject ModTileEntities{\r\n\tval ACCUMULATION_TABLE     = build<TileEntityAccumulationTable>(ModBlocks.ACCUMULATION_TABLE_TIER_1, ModBlocks.ACCUMULATION_TABLE_TIER_2, ModBlocks.ACCUMULATION_TABLE_TIER_3) named \"accumulation_table\"\r\n\tval BREWING_STAND          = build<TileEntityBrewingStandCustom>(ModBlocks.ENHANCED_BREWING_STAND) named \"brewing_stand\"\r\n\tval DARK_CHEST             = build<TileEntityDarkChest>(ModBlocks.DARK_CHEST) named \"dark_chest\"\r\n\tval END_PORTAL_ACCEPTOR    = build<TileEntityEndPortalAcceptor>(ModBlocks.END_PORTAL_ACCEPTOR) named \"end_portal_acceptor\"\r\n\tval ENERGY_CLUSTER         = build<TileEntityEnergyCluster>(ModBlocks.ENERGY_CLUSTER) named \"energy_cluster\"\r\n\tval EXPERIENCE_GATE        = build<TileEntityExperienceGate>(ModBlocks.EXPERIENCE_GATE_CONTROLLER) named \"experience_gate\"\r\n\tval IGNEOUS_PLATE          = build<TileEntityIgneousPlate>(ModBlocks.IGNEOUS_PLATE) named \"igneous_plate\"\r\n\tval INFUSED_TNT            = build<TileEntityInfusedTNT>(ModBlocks.INFUSED_TNT) named \"infused_tnt\"\r\n\tval JAR_O_DUST             = build<TileEntityJarODust>(ModBlocks.JAR_O_DUST) named \"jar_o_dust\"\r\n\tval LOOT_CHEST             = build<TileEntityLootChest>(ModBlocks.LOOT_CHEST) named \"loot_chest\"\r\n\tval MINERS_BURIAL_ALTAR    = build<TileEntityMinersBurialAltar>(ModBlocks.MINERS_BURIAL_ALTAR) named \"miners_burial_altar\"\r\n\tval END_PORTAL_INNER       = build<TileEntityPortalInner.End>(ModBlocks.END_PORTAL_INNER) named \"end_portal_inner\"\r\n\tval VOID_PORTAL_INNER      = build<TileEntityPortalInner.Void>(ModBlocks.VOID_PORTAL_INNER) named \"void_portal_inner\"\r\n\tval SPAWNER_OBSIDIAN_TOWER = build<TileEntitySpawnerObsidianTower>(ModBlocks.SPAWNER_OBSIDIAN_TOWERS) named \"spawner_obsidian_tower\"\r\n\tval TABLE_PEDESTAL         = build<TileEntityTablePedestal>(ModBlocks.TABLE_PEDESTAL) named \"table_pedestal\"\r\n\tval VOID_PORTAL_STORAGE    = build<TileEntityVoidPortalStorage>(ModBlocks.VOID_PORTAL_STORAGE, ModBlocks.VOID_PORTAL_STORAGE_CRAFTED) named \"void_portal_storage\"\r\n\t\r\n\t@SubscribeEvent\r\n\tfun onRegister(e: RegistryEvent.Register<TileEntityType<*>>){\r\n\t\twith(e.registry){\r\n\t\t\tregister(ACCUMULATION_TABLE)\r\n\t\t\tregister(BREWING_STAND)\r\n\t\t\tregister(DARK_CHEST)\r\n\t\t\tregister(END_PORTAL_ACCEPTOR)\r\n\t\t\tregister(ENERGY_CLUSTER)\r\n\t\t\tregister(EXPERIENCE_GATE)\r\n\t\t\tregister(IGNEOUS_PLATE)\r\n\t\t\tregister(INFUSED_TNT)\r\n\t\t\tregister(JAR_O_DUST)\r\n\t\t\tregister(LOOT_CHEST)\r\n\t\t\tregister(MINERS_BURIAL_ALTAR)\r\n\t\t\tregister(END_PORTAL_INNER)\r\n\t\t\tregister(VOID_PORTAL_INNER)\r\n\t\t\tregister(SPAWNER_OBSIDIAN_TOWER)\r\n\t\t\tregister(TABLE_PEDESTAL)\r\n\t\t\tregister(VOID_PORTAL_STORAGE)\r\n\t\t}\r\n\t}\r\n\t\r\n\tfun setupVanillaValidBlocks(){\r\n\t\twith(TileEntityType.SKULL){\r\n\t\t\tvalidBlocks = ImmutableSet.builder<Block>()\r\n\t\t\t\t.addAll(validBlocks)\r\n\t\t\t\t.add(ModBlocks.ENDERMAN_HEAD)\r\n\t\t\t\t.add(ModBlocks.ENDERMAN_WALL_HEAD)\r\n\t\t\t\t.build()\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate inline fun <reified T : TileEntity> build(vararg blocks: Block): TileEntityType<T>{\r\n\t\treturn TileEntityType.Builder.create<T>(TileEntityConstructors.get(T::class.java), *blocks).build(null) // UPDATE\r\n\t}\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/chylex/hee/init/ModTileEntities.kt	(revision 41aa0b6695a1ac98e2d75beae7cb260618fe1f25)
+++ src/main/java/chylex/hee/init/ModTileEntities.kt	(date 1579751611854)
@@ -6,6 +6,7 @@
 import chylex.hee.game.block.entity.TileEntityEndPortalAcceptor
 import chylex.hee.game.block.entity.TileEntityEnergyCluster
 import chylex.hee.game.block.entity.TileEntityExperienceGate
+import chylex.hee.game.block.entity.TileEntityExperienceTable
 import chylex.hee.game.block.entity.TileEntityIgneousPlate
 import chylex.hee.game.block.entity.TileEntityInfusedTNT
 import chylex.hee.game.block.entity.TileEntityJarODust
@@ -34,6 +35,7 @@
 	val END_PORTAL_ACCEPTOR    = build<TileEntityEndPortalAcceptor>(ModBlocks.END_PORTAL_ACCEPTOR) named "end_portal_acceptor"
 	val ENERGY_CLUSTER         = build<TileEntityEnergyCluster>(ModBlocks.ENERGY_CLUSTER) named "energy_cluster"
 	val EXPERIENCE_GATE        = build<TileEntityExperienceGate>(ModBlocks.EXPERIENCE_GATE_CONTROLLER) named "experience_gate"
+	val EXPERIENCE_TABLE       = build<TileEntityExperienceTable>(ModBlocks.EXPERIENCE_TABLE_TIER_1, ModBlocks.EXPERIENCE_TABLE_TIER_2, ModBlocks.EXPERIENCE_TABLE_TIER_3) named "experience_table"
 	val IGNEOUS_PLATE          = build<TileEntityIgneousPlate>(ModBlocks.IGNEOUS_PLATE) named "igneous_plate"
 	val INFUSED_TNT            = build<TileEntityInfusedTNT>(ModBlocks.INFUSED_TNT) named "infused_tnt"
 	val JAR_O_DUST             = build<TileEntityJarODust>(ModBlocks.JAR_O_DUST) named "jar_o_dust"
@@ -54,6 +56,7 @@
 			register(END_PORTAL_ACCEPTOR)
 			register(ENERGY_CLUSTER)
 			register(EXPERIENCE_GATE)
+			register(EXPERIENCE_TABLE)
 			register(IGNEOUS_PLATE)
 			register(INFUSED_TNT)
 			register(JAR_O_DUST)
