Index: src/main/java/chylex/hee/game/block/BlockShulkerBoxOverride.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/chylex/hee/game/block/BlockShulkerBoxOverride.kt	(date 1579751731226)
+++ src/main/java/chylex/hee/game/block/BlockShulkerBoxOverride.kt	(date 1579751731226)
@@ -0,0 +1,9 @@
+package chylex.hee.game.block
+import chylex.hee.system.migration.vanilla.BlockShulkerBox
+import net.minecraft.item.DyeColor
+
+class BlockShulkerBoxOverride(properties: Properties, color: DyeColor) : BlockShulkerBox(color, properties){
+	override fun getTranslationKey(): String{
+		return "block.hee.large_shulker_box"
+	}
+}
Index: src/main/java/chylex/hee/game/block/info/BlockBuilder.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package chylex.hee.game.block.info\r\nimport net.minecraft.block.Block\r\nimport net.minecraft.block.SoundType\r\nimport net.minecraft.block.material.Material\r\nimport net.minecraft.block.material.MaterialColor\r\nimport net.minecraftforge.common.ToolType\r\n\r\nclass BlockBuilder(val material: Material, var color: MaterialColor, var sound: SoundType){\r\n\tconstructor(original: BlockBuilder) : this(original.material, original.color, original.sound){\r\n\t\tharvestTool = original.harvestTool\r\n\t\tharvestHardness = original.harvestHardness\r\n\t\texplosionResistance = original.explosionResistance\r\n\t\t\r\n\t\tlightLevel = original.lightLevel\r\n\t\tslipperiness = original.slipperiness\r\n\t\t\r\n\t\trandomTicks = original.randomTicks\r\n\t\tnoDrops = original.noDrops\r\n\t}\r\n\t\r\n\tvar harvestTool: Pair<Int, ToolType?> = Pair(-1, null)\r\n\tvar harvestHardness: Float = 0F\r\n\tvar explosionResistance: Float = 0F\r\n\t\r\n\tvar lightLevel: Int = 0\r\n\tvar slipperiness: Float = 0.6F\r\n\t\r\n\tvar randomTicks: Boolean = false\r\n\tvar noDrops: Boolean = false\r\n\t\r\n\tval p: Block.Properties\r\n\t\tget() = Block.Properties.create(material, color).apply {\r\n\t\t\tval (level, tool) = harvestTool\r\n\t\t\t\r\n\t\t\tif (tool != null){\r\n\t\t\t\tharvestTool(tool)\r\n\t\t\t\tharvestLevel(level)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\thardnessAndResistance(harvestHardness, explosionResistance)\r\n\t\t\tlightValue(lightLevel)\r\n\t\t\tslipperiness(slipperiness)\r\n\t\t\tsound(sound)\r\n\t\t\t\r\n\t\t\tif (!material.blocksMovement()){\r\n\t\t\t\tdoesNotBlockMovement()\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (randomTicks){\r\n\t\t\t\ttickRandomly()\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (noDrops){\r\n\t\t\t\tnoDrops()\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\tfun makeIndestructible(){\r\n\t\tharvestTool = Pair(-1, null)\r\n\t\tharvestHardness = INDESTRUCTIBLE_HARDNESS\r\n\t\texplosionResistance = INDESTRUCTIBLE_RESISTANCE\r\n\t\tnoDrops = true\r\n\t}\r\n\t\r\n\tinline fun clone(modify: BlockBuilder.() -> Unit): BlockBuilder{\r\n\t\treturn BlockBuilder(this).apply(modify)\r\n\t}\r\n\t\r\n\tcompanion object{\r\n\t\tconst val INDESTRUCTIBLE_HARDNESS = -1F\r\n\t\tconst val INDESTRUCTIBLE_RESISTANCE = 3600000F\r\n\t}\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/chylex/hee/game/block/info/BlockBuilder.kt	(revision 41aa0b6695a1ac98e2d75beae7cb260618fe1f25)
+++ src/main/java/chylex/hee/game/block/info/BlockBuilder.kt	(date 1579751731226)
@@ -25,6 +25,7 @@
 	var lightLevel: Int = 0
 	var slipperiness: Float = 0.6F
 	
+	var variableOpacity: Boolean = false
 	var randomTicks: Boolean = false
 	var noDrops: Boolean = false
 	
@@ -46,6 +47,10 @@
 				doesNotBlockMovement()
 			}
 			
+			if (variableOpacity){
+				variableOpacity()
+			}
+			
 			if (randomTicks){
 				tickRandomly()
 			}
Index: src/main/java/chylex/hee/init/ModBlocks.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package chylex.hee.init\r\nimport chylex.hee.HEE\r\nimport chylex.hee.game.block.BlockAncientCobweb\r\nimport chylex.hee.game.block.BlockBrewingStandCustom\r\nimport chylex.hee.game.block.BlockCauldronWithDragonsBreath\r\nimport chylex.hee.game.block.BlockCauldronWithGoo\r\nimport chylex.hee.game.block.BlockCorruptedEnergy\r\nimport chylex.hee.game.block.BlockDarkChest\r\nimport chylex.hee.game.block.BlockDeathFlowerDecaying\r\nimport chylex.hee.game.block.BlockDragonEggOverride\r\nimport chylex.hee.game.block.BlockDryVines\r\nimport chylex.hee.game.block.BlockDustyStoneBricks\r\nimport chylex.hee.game.block.BlockDustyStonePlain\r\nimport chylex.hee.game.block.BlockEndPlant\r\nimport chylex.hee.game.block.BlockEndPortalAcceptor\r\nimport chylex.hee.game.block.BlockEndPortalInner\r\nimport chylex.hee.game.block.BlockEndPortalOverride\r\nimport chylex.hee.game.block.BlockEndPowderOre\r\nimport chylex.hee.game.block.BlockEnderGoo\r\nimport chylex.hee.game.block.BlockEnderGooPurified\r\nimport chylex.hee.game.block.BlockEndersol\r\nimport chylex.hee.game.block.BlockEndium\r\nimport chylex.hee.game.block.BlockEnergyCluster\r\nimport chylex.hee.game.block.BlockEternalFire\r\nimport chylex.hee.game.block.BlockExperienceGateController\r\nimport chylex.hee.game.block.BlockExperienceGateOutline\r\nimport chylex.hee.game.block.BlockFallingObsidian\r\nimport chylex.hee.game.block.BlockFlowerPotCustom\r\nimport chylex.hee.game.block.BlockFlowerPotDeathFlowerDecaying\r\nimport chylex.hee.game.block.BlockGloomrock\r\nimport chylex.hee.game.block.BlockGloomtorch\r\nimport chylex.hee.game.block.BlockGraveDirt\r\nimport chylex.hee.game.block.BlockHumus\r\nimport chylex.hee.game.block.BlockIgneousPlate\r\nimport chylex.hee.game.block.BlockIgneousRockOre\r\nimport chylex.hee.game.block.BlockInfusedGlass\r\nimport chylex.hee.game.block.BlockInfusedTNT\r\nimport chylex.hee.game.block.BlockJarODust\r\nimport chylex.hee.game.block.BlockLootChest\r\nimport chylex.hee.game.block.BlockMinersBurialAltar\r\nimport chylex.hee.game.block.BlockPillarCustom\r\nimport chylex.hee.game.block.BlockPuzzleLogic\r\nimport chylex.hee.game.block.BlockScaffolding\r\nimport chylex.hee.game.block.BlockSimple\r\nimport chylex.hee.game.block.BlockSimpleShaped\r\nimport chylex.hee.game.block.BlockSimpleWithMapColor\r\nimport chylex.hee.game.block.BlockSkullCustom\r\nimport chylex.hee.game.block.BlockSlabCustom\r\nimport chylex.hee.game.block.BlockSpawnerObsidianTowers\r\nimport chylex.hee.game.block.BlockStairsCustom\r\nimport chylex.hee.game.block.BlockStardustOre\r\nimport chylex.hee.game.block.BlockTableBase\r\nimport chylex.hee.game.block.BlockTablePedestal\r\nimport chylex.hee.game.block.BlockTableTile\r\nimport chylex.hee.game.block.BlockVoidPortalCrafted\r\nimport chylex.hee.game.block.BlockVoidPortalInner\r\nimport chylex.hee.game.block.BlockVoidPortalStorage\r\nimport chylex.hee.game.block.BlockVoidPortalStorageCrafted\r\nimport chylex.hee.game.block.BlockWhitebarkLeaves\r\nimport chylex.hee.game.block.BlockWhitebarkLog\r\nimport chylex.hee.game.block.BlockWhitebarkSapling\r\nimport chylex.hee.game.block.entity.TileEntityAccumulationTable\r\nimport chylex.hee.game.block.fluid.FluidEnderGoo\r\nimport chylex.hee.game.block.fluid.FluidEnderGooPurified\r\nimport chylex.hee.game.block.info.BlockBuilders.buildAncientCobweb\r\nimport chylex.hee.game.block.info.BlockBuilders.buildBrewingStand\r\nimport chylex.hee.game.block.info.BlockBuilders.buildCauldron\r\nimport chylex.hee.game.block.info.BlockBuilders.buildCorruptedEnergy\r\nimport chylex.hee.game.block.info.BlockBuilders.buildDarkLoam\r\nimport chylex.hee.game.block.info.BlockBuilders.buildDragonEgg\r\nimport chylex.hee.game.block.info.BlockBuilders.buildDryVines\r\nimport chylex.hee.game.block.info.BlockBuilders.buildDustyStone\r\nimport chylex.hee.game.block.info.BlockBuilders.buildDustyStoneBricks\r\nimport chylex.hee.game.block.info.BlockBuilders.buildDustyStoneCracked\r\nimport chylex.hee.game.block.info.BlockBuilders.buildDustyStoneDamaged\r\nimport chylex.hee.game.block.info.BlockBuilders.buildEndPortalOverride\r\nimport chylex.hee.game.block.info.BlockBuilders.buildEndPowderOre\r\nimport chylex.hee.game.block.info.BlockBuilders.buildEndStone\r\nimport chylex.hee.game.block.info.BlockBuilders.buildEnderSol\r\nimport chylex.hee.game.block.info.BlockBuilders.buildEndermanHead\r\nimport chylex.hee.game.block.info.BlockBuilders.buildEndiumBlock\r\nimport chylex.hee.game.block.info.BlockBuilders.buildEndiumOre\r\nimport chylex.hee.game.block.info.BlockBuilders.buildEnergyCluster\r\nimport chylex.hee.game.block.info.BlockBuilders.buildEternalFire\r\nimport chylex.hee.game.block.info.BlockBuilders.buildEtherealLantern\r\nimport chylex.hee.game.block.info.BlockBuilders.buildExperienceGate\r\nimport chylex.hee.game.block.info.BlockBuilders.buildFlowerPot\r\nimport chylex.hee.game.block.info.BlockBuilders.buildGloomrock\r\nimport chylex.hee.game.block.info.BlockBuilders.buildGloomrockBricks\r\nimport chylex.hee.game.block.info.BlockBuilders.buildGloomrockSmooth\r\nimport chylex.hee.game.block.info.BlockBuilders.buildGloomtorch\r\nimport chylex.hee.game.block.info.BlockBuilders.buildGraveDirt\r\nimport chylex.hee.game.block.info.BlockBuilders.buildHumus\r\nimport chylex.hee.game.block.info.BlockBuilders.buildIgneousPlate\r\nimport chylex.hee.game.block.info.BlockBuilders.buildIgneousRockOre\r\nimport chylex.hee.game.block.info.BlockBuilders.buildInfusedGlass\r\nimport chylex.hee.game.block.info.BlockBuilders.buildJarODust\r\nimport chylex.hee.game.block.info.BlockBuilders.buildLootChest\r\nimport chylex.hee.game.block.info.BlockBuilders.buildMinersBurial\r\nimport chylex.hee.game.block.info.BlockBuilders.buildMinersBurialIndestructible\r\nimport chylex.hee.game.block.info.BlockBuilders.buildObsidian\r\nimport chylex.hee.game.block.info.BlockBuilders.buildObsidianVariation\r\nimport chylex.hee.game.block.info.BlockBuilders.buildObsidianVariationLit\r\nimport chylex.hee.game.block.info.BlockBuilders.buildPlant\r\nimport chylex.hee.game.block.info.BlockBuilders.buildPortalFrame\r\nimport chylex.hee.game.block.info.BlockBuilders.buildPortalFrameCrafted\r\nimport chylex.hee.game.block.info.BlockBuilders.buildPortalInner\r\nimport chylex.hee.game.block.info.BlockBuilders.buildPuzzleLogic\r\nimport chylex.hee.game.block.info.BlockBuilders.buildPuzzleWall\r\nimport chylex.hee.game.block.info.BlockBuilders.buildScaffolding\r\nimport chylex.hee.game.block.info.BlockBuilders.buildSpawnerObsidianTowers\r\nimport chylex.hee.game.block.info.BlockBuilders.buildStardustOre\r\nimport chylex.hee.game.block.info.BlockBuilders.buildTable\r\nimport chylex.hee.game.block.info.BlockBuilders.buildTablePedestal\r\nimport chylex.hee.game.block.info.BlockBuilders.buildVantablock\r\nimport chylex.hee.game.block.info.BlockBuilders.buildWhitebark\r\nimport chylex.hee.game.block.info.BlockBuilders.buildWhitebarkLeaves\r\nimport chylex.hee.game.block.info.BlockBuilders.buildWhitebarkPlanks\r\nimport chylex.hee.game.block.info.BlockBuilders.buildWhitebarkSapling\r\nimport chylex.hee.game.block.util.CustomSkulls\r\nimport chylex.hee.game.item.ItemAncientCobweb\r\nimport chylex.hee.game.item.ItemBlockFuel\r\nimport chylex.hee.game.item.ItemDeathFlower\r\nimport chylex.hee.game.item.ItemDragonEgg\r\nimport chylex.hee.game.item.ItemInfusedTNT\r\nimport chylex.hee.game.world.feature.basic.trees.types.AutumnTreeGenerator\r\nimport chylex.hee.init.ModCreativeTabs.OrderedCreativeTab\r\nimport chylex.hee.system.migration.Facing.NORTH\r\nimport chylex.hee.system.migration.Facing.SOUTH\r\nimport chylex.hee.system.migration.forge.SubscribeAllEvents\r\nimport chylex.hee.system.migration.forge.SubscribeEvent\r\nimport chylex.hee.system.migration.vanilla.BlockFire\r\nimport chylex.hee.system.migration.vanilla.BlockWall\r\nimport chylex.hee.system.migration.vanilla.Blocks\r\nimport chylex.hee.system.migration.vanilla.ItemBlock\r\nimport chylex.hee.system.util.facades.Resource\r\nimport chylex.hee.system.util.named\r\nimport chylex.hee.system.util.useVanillaName\r\nimport net.minecraft.block.Block\r\nimport net.minecraft.block.material.MaterialColor\r\nimport net.minecraft.fluid.Fluid\r\nimport net.minecraft.item.Item\r\nimport net.minecraft.item.ItemGroup\r\nimport net.minecraft.util.math.AxisAlignedBB\r\nimport net.minecraftforge.event.RegistryEvent\r\nimport net.minecraftforge.fml.common.Mod.EventBusSubscriber.Bus.MOD\r\nimport java.util.concurrent.Callable\r\n\r\n@SubscribeAllEvents(modid = HEE.ID, bus = MOD)\r\nobject ModBlocks{\r\n\t\r\n\t// Blocks: Building (Uncategorized)\r\n\t\r\n\t@JvmField val ETHEREAL_LANTERN = BlockSimple(buildEtherealLantern) named \"ethereal_lantern\"\r\n\t@JvmField val STONE_BRICK_WALL = BlockWall(Block.Properties.from(Blocks.STONE_BRICKS)) named \"stone_brick_wall\"\r\n\t@JvmField val INFUSED_GLASS    = BlockInfusedGlass(buildInfusedGlass) named \"infused_glass\"\r\n\t@JvmField val VANTABLOCK       = BlockSimple(buildVantablock) named \"vantablock\"\r\n\t@JvmField val ENDIUM_BLOCK     = BlockEndium(buildEndiumBlock) named \"endium_block\"\r\n\t@JvmField val ENDERSOL         = BlockEndersol(buildEnderSol) named \"endersol\"\r\n\t@JvmField val HUMUS            = BlockHumus(buildHumus) named \"humus\"\r\n\t\r\n\t// Blocks: Building (Gloomrock)\r\n\t\r\n\t@JvmField val GLOOMROCK                = BlockGloomrock(buildGloomrock) named \"gloomrock\"\r\n\t@JvmField val GLOOMROCK_BRICKS         = BlockGloomrock(buildGloomrockBricks) named \"gloomrock_bricks\"\r\n\t@JvmField val GLOOMROCK_BRICK_STAIRS   = BlockStairsCustom(GLOOMROCK_BRICKS) named \"gloomrock_brick_stairs\"\r\n\t@JvmField val GLOOMROCK_BRICK_SLAB     = BlockSlabCustom(buildGloomrockBricks) named \"gloomrock_brick_slab\"\r\n\t@JvmField val GLOOMROCK_SMOOTH         = BlockGloomrock(buildGloomrockSmooth) named \"gloomrock_smooth\"\r\n\t@JvmField val GLOOMROCK_SMOOTH_STAIRS  = BlockStairsCustom(GLOOMROCK_SMOOTH) named \"gloomrock_smooth_stairs\"\r\n\t@JvmField val GLOOMROCK_SMOOTH_SLAB    = BlockSlabCustom(buildGloomrockSmooth) named \"gloomrock_smooth_slab\"\r\n\t@JvmField val GLOOMROCK_SMOOTH_RED     = BlockGloomrock(buildGloomrockSmooth) named \"gloomrock_smooth_red\"\r\n\t@JvmField val GLOOMROCK_SMOOTH_ORANGE  = BlockGloomrock(buildGloomrockSmooth) named \"gloomrock_smooth_orange\"\r\n\t@JvmField val GLOOMROCK_SMOOTH_YELLOW  = BlockGloomrock(buildGloomrockSmooth) named \"gloomrock_smooth_yellow\"\r\n\t@JvmField val GLOOMROCK_SMOOTH_GREEN   = BlockGloomrock(buildGloomrockSmooth) named \"gloomrock_smooth_green\"\r\n\t@JvmField val GLOOMROCK_SMOOTH_CYAN    = BlockGloomrock(buildGloomrockSmooth) named \"gloomrock_smooth_cyan\"\r\n\t@JvmField val GLOOMROCK_SMOOTH_BLUE    = BlockGloomrock(buildGloomrockSmooth) named \"gloomrock_smooth_blue\"\r\n\t@JvmField val GLOOMROCK_SMOOTH_PURPLE  = BlockGloomrock(buildGloomrockSmooth) named \"gloomrock_smooth_purple\"\r\n\t@JvmField val GLOOMROCK_SMOOTH_MAGENTA = BlockGloomrock(buildGloomrockSmooth) named \"gloomrock_smooth_magenta\"\r\n\t@JvmField val GLOOMROCK_SMOOTH_WHITE   = BlockGloomrock(buildGloomrockSmooth) named \"gloomrock_smooth_white\"\r\n\t@JvmField val GLOOMTORCH               = BlockGloomtorch(buildGloomtorch) named \"gloomtorch\"\r\n\t\r\n\t// Blocks: Building (Dusty Stone)\r\n\t\r\n\t@JvmField val DUSTY_STONE                = BlockDustyStonePlain(buildDustyStone) named \"dusty_stone\"\r\n\t@JvmField val DUSTY_STONE_CRACKED        = BlockDustyStonePlain(buildDustyStoneCracked) named \"dusty_stone_cracked\"\r\n\t@JvmField val DUSTY_STONE_DAMAGED        = BlockDustyStonePlain(buildDustyStoneDamaged) named \"dusty_stone_damaged\"\r\n\t@JvmField val DUSTY_STONE_BRICKS         = BlockDustyStoneBricks(buildDustyStoneBricks) named \"dusty_stone_bricks\"\r\n\t@JvmField val DUSTY_STONE_CRACKED_BRICKS = BlockDustyStoneBricks(buildDustyStoneBricks) named \"dusty_stone_cracked_bricks\"\r\n\t@JvmField val DUSTY_STONE_BRICK_STAIRS   = BlockStairsCustom(DUSTY_STONE_BRICKS) named \"dusty_stone_brick_stairs\"\r\n\t@JvmField val DUSTY_STONE_BRICK_SLAB     = BlockSlabCustom(buildDustyStoneBricks) named \"dusty_stone_brick_slab\"\r\n\t\r\n\t// Blocks: Building (Obsidian)\r\n\t\r\n\t@JvmField val OBSIDIAN_STAIRS       = BlockStairsCustom(Blocks.OBSIDIAN) named \"obsidian_stairs\"\r\n\t@JvmField val OBSIDIAN_FALLING      = BlockFallingObsidian(buildObsidian) named \"obsidian_falling\"\r\n\t@JvmField val OBSIDIAN_SMOOTH       = BlockSimple(buildObsidianVariation) named \"obsidian_smooth\"\r\n\t@JvmField val OBSIDIAN_CHISELED     = BlockSimple(buildObsidianVariation) named \"obsidian_chiseled\"\r\n\t@JvmField val OBSIDIAN_PILLAR       = BlockPillarCustom(buildObsidianVariation) named \"obsidian_pillar\"\r\n\t@JvmField val OBSIDIAN_SMOOTH_LIT   = BlockSimple(buildObsidianVariationLit) named \"obsidian_smooth_lit\"\r\n\t@JvmField val OBSIDIAN_CHISELED_LIT = BlockSimple(buildObsidianVariationLit) named \"obsidian_chiseled_lit\"\r\n\t@JvmField val OBSIDIAN_PILLAR_LIT   = BlockPillarCustom(buildObsidianVariationLit) named \"obsidian_pillar_lit\"\r\n\t\r\n\t// Blocks: Building (End Stone)\r\n\t\r\n\t@JvmField val END_STONE_INFESTED  = BlockSimpleWithMapColor(buildEndStone, MaterialColor.RED) named \"end_stone_infested\"\r\n\t@JvmField val END_STONE_BURNED    = BlockSimpleWithMapColor(buildEndStone, MaterialColor.ADOBE /* RENAME ORANGE */) named \"end_stone_burned\"\r\n\t@JvmField val END_STONE_ENCHANTED = BlockSimpleWithMapColor(buildEndStone, MaterialColor.PURPLE) named \"end_stone_enchanted\"\r\n\t\r\n\t// Blocks: Building (Dark Loam)\r\n\t\r\n\t@JvmField val DARK_LOAM      = BlockSimple(buildDarkLoam) named \"dark_loam\"\r\n\t@JvmField val DARK_LOAM_SLAB = BlockSlabCustom(buildDarkLoam) named \"dark_loam_slab\"\r\n\t\r\n\t// Blocks: Building (Grave Dirt)\r\n\t\r\n\t@JvmField val GRAVE_DIRT_PLAIN      = BlockGraveDirt(buildGraveDirt) named \"grave_dirt\"\r\n\t@JvmField val GRAVE_DIRT_LOOT       = BlockGraveDirt(buildGraveDirt) named \"grave_dirt_loot\"\r\n\t@JvmField val GRAVE_DIRT_SPIDERLING = BlockGraveDirt.Spiderling(buildGraveDirt) named \"grave_dirt_spiderling\"\r\n\t\r\n\t// Blocks: Building (Wood)\r\n\t\r\n\t@JvmField val WHITEBARK_LOG    = BlockWhitebarkLog(buildWhitebark) named \"whitebark_log\"\r\n\t@JvmField val WHITEBARK        = BlockSimple(buildWhitebark) named \"whitebark\"\r\n\t@JvmField val WHITEBARK_PLANKS = BlockSimple(buildWhitebarkPlanks) named \"whitebark_planks\"\r\n\t@JvmField val WHITEBARK_STAIRS = BlockStairsCustom(WHITEBARK_PLANKS) named \"whitebark_stairs\"\r\n\t@JvmField val WHITEBARK_SLAB   = BlockSlabCustom(buildWhitebarkPlanks) named \"whitebark_slab\"\r\n\t\r\n\t// Blocks: Building (Miner's Burial)\r\n\t\r\n\t@JvmField val MINERS_BURIAL_BLOCK_PLAIN    = BlockSimple(buildMinersBurial) named \"miners_burial_block_plain\"\r\n\t@JvmField val MINERS_BURIAL_BLOCK_CHISELED = BlockSimple(buildMinersBurial) named \"miners_burial_block_chiseled\"\r\n\t@JvmField val MINERS_BURIAL_BLOCK_PILLAR   = BlockPillarCustom(buildMinersBurial) named \"miners_burial_block_pillar\"\r\n\t@JvmField val MINERS_BURIAL_BLOCK_JAIL     = BlockSimple(buildMinersBurialIndestructible) named \"miners_burial_block_jail\"\r\n\t@JvmField val MINERS_BURIAL_ALTAR          = BlockMinersBurialAltar(buildMinersBurialIndestructible) named \"miners_burial_altar\"\r\n\t\r\n\t// Blocks: Fluids\r\n\t\r\n\t@JvmField val ENDER_GOO          = BlockEnderGoo() named \"ender_goo\"\r\n\t@JvmField val PURIFIED_ENDER_GOO = BlockEnderGooPurified() named \"purified_ender_goo\"\r\n\t\r\n\t@JvmField val CAULDRON_ENDER_GOO          = BlockCauldronWithGoo(buildCauldron, ENDER_GOO) named \"cauldron_ender_goo\"\r\n\t@JvmField val CAULDRON_PURIFIED_ENDER_GOO = BlockCauldronWithGoo(buildCauldron, PURIFIED_ENDER_GOO) named \"cauldron_purified_ender_goo\"\r\n\t@JvmField val CAULDRON_DRAGONS_BREATH     = BlockCauldronWithDragonsBreath(buildCauldron) named \"cauldron_dragons_breath\"\r\n\t\r\n\t// Blocks: Interactive (Storage)\r\n\t\r\n\t@JvmField val JAR_O_DUST = BlockJarODust(buildJarODust) named \"jar_o_dust\"\r\n\t@JvmField val DARK_CHEST = BlockDarkChest(buildGloomrock) named \"dark_chest\"\r\n\t@JvmField val LOOT_CHEST = BlockLootChest(buildLootChest) named \"loot_chest\"\r\n\t\r\n\t// Blocks: Interactive (Puzzle)\r\n\t\r\n\t@JvmField val PUZZLE_WALL       = BlockSimple(buildPuzzleWall) named \"puzzle_block_wall\"\r\n\t@JvmField val PUZZLE_PLAIN      = BlockPuzzleLogic.Plain(buildPuzzleLogic) named \"puzzle_block_plain\"\r\n\t@JvmField val PUZZLE_BURST_3    = BlockPuzzleLogic.Burst(buildPuzzleLogic, radius = 1) named \"puzzle_block_burst_3\"\r\n\t@JvmField val PUZZLE_BURST_5    = BlockPuzzleLogic.Burst(buildPuzzleLogic, radius = 2) named \"puzzle_block_burst_5\"\r\n\t@JvmField val PUZZLE_REDIRECT_1 = BlockPuzzleLogic.Redirect(buildPuzzleLogic, arrayOf(NORTH)) named \"puzzle_block_redirect_1\"\r\n\t@JvmField val PUZZLE_REDIRECT_2 = BlockPuzzleLogic.Redirect(buildPuzzleLogic, arrayOf(NORTH, SOUTH)) named \"puzzle_block_redirect_2\"\r\n\t@JvmField val PUZZLE_REDIRECT_4 = BlockPuzzleLogic.RedirectAll(buildPuzzleLogic) named \"puzzle_block_redirect_4\"\r\n\t@JvmField val PUZZLE_TELEPORT   = BlockPuzzleLogic.Teleport(buildPuzzleLogic) named \"puzzle_block_teleport\"\r\n\t\r\n\t// Blocks: Interactive (Gates)\r\n\t\r\n\t@JvmField val EXPERIENCE_GATE            = BlockExperienceGateOutline(buildExperienceGate) named \"experience_gate\"\r\n\t@JvmField val EXPERIENCE_GATE_CONTROLLER = BlockExperienceGateController(buildExperienceGate) named \"experience_gate_controller\"\r\n\t\r\n\t// Blocks: Interactive (Uncategorized)\r\n\t\r\n\t@JvmField val INFUSED_TNT            = BlockInfusedTNT() named \"infused_tnt\"\r\n\t@JvmField val IGNEOUS_PLATE          = BlockIgneousPlate(buildIgneousPlate) named \"igneous_plate\"\r\n\t@JvmField val ENHANCED_BREWING_STAND = BlockBrewingStandCustom(buildBrewingStand) named \"enhanced_brewing_stand\"\r\n\t\r\n\t// Blocks: Ores\r\n\t\r\n\t@JvmField val END_POWDER_ORE   = BlockEndPowderOre(buildEndPowderOre) named \"end_powder_ore\"\r\n\t@JvmField val ENDIUM_ORE       = BlockEndium(buildEndiumOre) named \"endium_ore\"\r\n\t@JvmField val STARDUST_ORE     = BlockStardustOre(buildStardustOre) named \"stardust_ore\"\r\n\t@JvmField val IGNEOUS_ROCK_ORE = BlockIgneousRockOre(buildIgneousRockOre) named \"igneous_rock_ore\"\r\n\t\r\n\t// Blocks: Decorative (Trees)\r\n\t\r\n\t@JvmField val WHITEBARK_SAPLING_AUTUMN_BROWN       = BlockWhitebarkSapling(buildWhitebarkSapling, AutumnTreeGenerator.Brown) named \"autumn_sapling_brown\"\r\n\t@JvmField val WHITEBARK_SAPLING_AUTUMN_ORANGE      = BlockWhitebarkSapling(buildWhitebarkSapling, AutumnTreeGenerator.Orange) named \"autumn_sapling_orange\"\r\n\t@JvmField val WHITEBARK_SAPLING_AUTUMN_YELLOWGREEN = BlockWhitebarkSapling(buildWhitebarkSapling, AutumnTreeGenerator.YellowGreen) named \"autumn_sapling_yellowgreen\"\r\n\t\r\n\t@JvmField val WHITEBARK_LEAVES_AUTUMN_BROWN       = BlockWhitebarkLeaves(buildWhitebarkLeaves, MaterialColor.BROWN_TERRACOTTA) named \"autumn_leaves_brown\"\r\n\t@JvmField val WHITEBARK_LEAVES_AUTUMN_ORANGE      = BlockWhitebarkLeaves(buildWhitebarkLeaves, MaterialColor.ADOBE /* RENAME ORANGE */) named \"autumn_leaves_orange\"\r\n\t@JvmField val WHITEBARK_LEAVES_AUTUMN_YELLOWGREEN = BlockWhitebarkLeaves(buildWhitebarkLeaves, MaterialColor.YELLOW) named \"autumn_leaves_yellowgreen\"\r\n\t\r\n\t@JvmField val POTTED_WHITEBARK_SAPLING_AUTUMN_BROWN       = BlockFlowerPotCustom(buildFlowerPot, WHITEBARK_SAPLING_AUTUMN_BROWN) named \"potted_autumn_sapling_brown\"\r\n\t@JvmField val POTTED_WHITEBARK_SAPLING_AUTUMN_ORANGE      = BlockFlowerPotCustom(buildFlowerPot, WHITEBARK_SAPLING_AUTUMN_ORANGE) named \"potted_autumn_sapling_orange\"\r\n\t@JvmField val POTTED_WHITEBARK_SAPLING_AUTUMN_YELLOWGREEN = BlockFlowerPotCustom(buildFlowerPot, WHITEBARK_SAPLING_AUTUMN_YELLOWGREEN) named \"potted_autumn_sapling_yellowgreen\"\r\n\t\r\n\t// Blocks: Decorative (Plants)\r\n\t\r\n\t@JvmField val DEATH_FLOWER_DECAYING = BlockDeathFlowerDecaying(buildPlant) named \"death_flower\"\r\n\t@JvmField val DEATH_FLOWER_HEALED   = BlockEndPlant(buildPlant) named \"death_flower_healed\"\r\n\t@JvmField val DEATH_FLOWER_WITHERED = BlockEndPlant(buildPlant) named \"death_flower_withered\"\r\n\t\r\n\t@JvmField val POTTED_DEATH_FLOWER_DECAYING = BlockFlowerPotDeathFlowerDecaying(buildFlowerPot, DEATH_FLOWER_DECAYING) named \"potted_death_flower\"\r\n\t@JvmField val POTTED_DEATH_FLOWER_HEALED   = BlockFlowerPotCustom(buildFlowerPot, DEATH_FLOWER_HEALED) named \"potted_death_flower_healed\"\r\n\t@JvmField val POTTED_DEATH_FLOWER_WITHERED = BlockFlowerPotCustom(buildFlowerPot, DEATH_FLOWER_WITHERED) named \"potted_death_flower_withered\"\r\n\t\r\n\t// Blocks: Decorative (Uncategorized)\r\n\t\r\n\t@JvmField val ANCIENT_COBWEB     = BlockAncientCobweb(buildAncientCobweb) named \"ancient_cobweb\"\r\n\t@JvmField val DRY_VINES          = BlockDryVines(buildDryVines) named \"dry_vines\"\r\n\t@JvmField val ENDERMAN_HEAD      = BlockSkullCustom(CustomSkulls.Enderman, buildEndermanHead) named \"enderman_head\"\r\n\t@JvmField val ENDERMAN_WALL_HEAD = BlockSkullCustom.Wall(CustomSkulls.Enderman, buildEndermanHead) named \"enderman_wall_head\"\r\n\t\r\n\t// Blocks: Spawners\r\n\t\r\n\t@JvmField val SPAWNER_OBSIDIAN_TOWERS = BlockSpawnerObsidianTowers(buildSpawnerObsidianTowers) named \"spawner_obsidian_towers\"\r\n\t\r\n\t// Blocks: Portals\r\n\t\r\n\tprivate val portalFrameAABB = AxisAlignedBB(0.0, 0.0, 0.0, 1.0, 0.8125, 1.0)\r\n\t\r\n\t@JvmField val END_PORTAL_INNER    = BlockEndPortalInner(buildPortalInner) named \"end_portal_inner\"\r\n\t@JvmField val END_PORTAL_FRAME    = BlockSimpleShaped(buildPortalFrame, portalFrameAABB) named \"end_portal_frame\"\r\n\t@JvmField val END_PORTAL_ACCEPTOR = BlockEndPortalAcceptor(buildPortalFrame, portalFrameAABB) named \"end_portal_acceptor\"\r\n\t\r\n\t@JvmField val VOID_PORTAL_INNER   = BlockVoidPortalInner(buildPortalInner) named \"void_portal_inner\"\r\n\t@JvmField val VOID_PORTAL_FRAME   = BlockSimpleShaped(buildPortalFrame, portalFrameAABB) named \"void_portal_frame\"\r\n\t@JvmField val VOID_PORTAL_STORAGE = BlockVoidPortalStorage(buildPortalFrame, portalFrameAABB) named \"void_portal_storage\"\r\n\t\r\n\t@JvmField val VOID_PORTAL_FRAME_CRAFTED   = BlockVoidPortalCrafted(buildPortalFrameCrafted, portalFrameAABB) named \"void_portal_frame_crafted\"\r\n\t@JvmField val VOID_PORTAL_STORAGE_CRAFTED = BlockVoidPortalStorageCrafted(buildPortalFrameCrafted, portalFrameAABB) named \"void_portal_storage_crafted\"\r\n\t\r\n\t// Blocks: Energy\r\n\t\r\n\t@JvmField val ENERGY_CLUSTER   = BlockEnergyCluster(buildEnergyCluster) named \"energy_cluster\"\r\n\t@JvmField val CORRUPTED_ENERGY = BlockCorruptedEnergy(buildCorruptedEnergy) named \"corrupted_energy\"\r\n\t\r\n\t// Blocks: Tables\r\n\t\r\n\t@JvmField val TABLE_PEDESTAL            = BlockTablePedestal(buildTablePedestal) named \"table_pedestal\"\r\n\t@JvmField val TABLE_BASE_TIER_1         = BlockTableBase(buildTable, tier = 1, firstTier = 1) named \"table_base_tier_1\"\r\n\t@JvmField val TABLE_BASE_TIER_2         = BlockTableBase(buildTable, tier = 2, firstTier = 1) named \"table_base_tier_2\"\r\n\t@JvmField val TABLE_BASE_TIER_3         = BlockTableBase(buildTable, tier = 3, firstTier = 1) named \"table_base_tier_3\"\r\n\t@JvmField val ACCUMULATION_TABLE_TIER_1 = BlockTableTile(buildTable, \"accumulation_table\", TileEntityAccumulationTable::class.java, tier = 1, firstTier = 1) named \"accumulation_table_tier_1\"\r\n\t@JvmField val ACCUMULATION_TABLE_TIER_2 = BlockTableTile(buildTable, \"accumulation_table\", TileEntityAccumulationTable::class.java, tier = 2, firstTier = 1) named \"accumulation_table_tier_2\"\r\n\t@JvmField val ACCUMULATION_TABLE_TIER_3 = BlockTableTile(buildTable, \"accumulation_table\", TileEntityAccumulationTable::class.java, tier = 3, firstTier = 1) named \"accumulation_table_tier_3\"\r\n\t\r\n\t// Blocks: Utilities\r\n\t\r\n\t@JvmField val ETERNAL_FIRE = BlockEternalFire(buildEternalFire) named \"eternal_fire\"\r\n\t@JvmField val SCAFFOLDING  = BlockScaffolding(buildScaffolding) named \"scaffolding\"\r\n\t\r\n\t// Registry\r\n\t\r\n\tprivate val itemBlockBaseProps\r\n\t\tget() = Item.Properties().group(ModCreativeTabs.main)\r\n\t\r\n\tprivate val itemBlockDefaultProps = itemBlockBaseProps\r\n\tprivate val itemBlockPropsHidden = Item.Properties()\r\n\t\r\n\tprivate val basicItemBlock = { block: Block -> ItemBlock(block, itemBlockDefaultProps) }\r\n\tprivate val hiddenItemBlock = { block: Block -> ItemBlock(block, itemBlockPropsHidden) }\r\n\t\r\n\tprivate fun fuelItemBlock(burnTicks: Int): (Block) -> ItemBlock{\r\n\t\treturn { block -> ItemBlockFuel(block, itemBlockDefaultProps, burnTicks) }\r\n\t}\r\n\t\r\n\t@SubscribeEvent\r\n\tfun onRegisterFluids(e: RegistryEvent.Register<Fluid>){\r\n\t\twith(e.registry){\r\n\t\t\tregister(FluidEnderGoo.still)\r\n\t\t\tregister(FluidEnderGoo.flowing)\r\n\t\t\tregister(FluidEnderGooPurified.still)\r\n\t\t\tregister(FluidEnderGooPurified.flowing)\r\n\t\t}\r\n\t}\r\n\t\r\n\t@SubscribeEvent\r\n\tfun onRegisterBlocks(e: RegistryEvent.Register<Block>){\r\n\t\twith(e.registry){\r\n\t\t\tregister(ETHEREAL_LANTERN with basicItemBlock)\r\n\t\t\tregister(STONE_BRICK_WALL with basicItemBlock)\r\n\t\t\tregister(INFUSED_GLASS with basicItemBlock)\r\n\t\t\tregister(VANTABLOCK with basicItemBlock)\r\n\t\t\tregister(ENDIUM_BLOCK with basicItemBlock)\r\n\t\t\tregister(ENDERSOL with basicItemBlock)\r\n\t\t\tregister(HUMUS with basicItemBlock)\r\n\t\t\t\r\n\t\t\tregister(GLOOMROCK with basicItemBlock)\r\n\t\t\tregister(GLOOMROCK_BRICKS with basicItemBlock)\r\n\t\t\tregister(GLOOMROCK_BRICK_STAIRS with basicItemBlock)\r\n\t\t\tregister(GLOOMROCK_BRICK_SLAB with basicItemBlock)\r\n\t\t\tregister(GLOOMROCK_SMOOTH with basicItemBlock)\r\n\t\t\tregister(GLOOMROCK_SMOOTH_STAIRS with basicItemBlock)\r\n\t\t\tregister(GLOOMROCK_SMOOTH_SLAB with basicItemBlock)\r\n\t\t\tregister(GLOOMROCK_SMOOTH_RED with basicItemBlock)\r\n\t\t\tregister(GLOOMROCK_SMOOTH_ORANGE with basicItemBlock)\r\n\t\t\tregister(GLOOMROCK_SMOOTH_YELLOW with basicItemBlock)\r\n\t\t\tregister(GLOOMROCK_SMOOTH_GREEN with basicItemBlock)\r\n\t\t\tregister(GLOOMROCK_SMOOTH_CYAN with basicItemBlock)\r\n\t\t\tregister(GLOOMROCK_SMOOTH_BLUE with basicItemBlock)\r\n\t\t\tregister(GLOOMROCK_SMOOTH_PURPLE with basicItemBlock)\r\n\t\t\tregister(GLOOMROCK_SMOOTH_MAGENTA with basicItemBlock)\r\n\t\t\tregister(GLOOMROCK_SMOOTH_WHITE with basicItemBlock)\r\n\t\t\tregister(GLOOMTORCH with basicItemBlock)\r\n\t\t\t\r\n\t\t\tregister(DUSTY_STONE with basicItemBlock)\r\n\t\t\tregister(DUSTY_STONE_CRACKED with basicItemBlock)\r\n\t\t\tregister(DUSTY_STONE_DAMAGED with basicItemBlock)\r\n\t\t\tregister(DUSTY_STONE_BRICKS with basicItemBlock)\r\n\t\t\tregister(DUSTY_STONE_CRACKED_BRICKS with basicItemBlock)\r\n\t\t\tregister(DUSTY_STONE_BRICK_STAIRS with basicItemBlock)\r\n\t\t\tregister(DUSTY_STONE_BRICK_SLAB with basicItemBlock)\r\n\t\t\t\r\n\t\t\tregister(OBSIDIAN_STAIRS with basicItemBlock)\r\n\t\t\tregister(OBSIDIAN_FALLING with basicItemBlock)\r\n\t\t\tregister(OBSIDIAN_SMOOTH with basicItemBlock)\r\n\t\t\tregister(OBSIDIAN_CHISELED with basicItemBlock)\r\n\t\t\tregister(OBSIDIAN_PILLAR with basicItemBlock)\r\n\t\t\tregister(OBSIDIAN_SMOOTH_LIT with basicItemBlock)\r\n\t\t\tregister(OBSIDIAN_CHISELED_LIT with basicItemBlock)\r\n\t\t\tregister(OBSIDIAN_PILLAR_LIT with basicItemBlock)\r\n\t\t\t\r\n\t\t\tregister(END_STONE_INFESTED with basicItemBlock)\r\n\t\t\tregister(END_STONE_BURNED with basicItemBlock)\r\n\t\t\tregister(END_STONE_ENCHANTED with basicItemBlock)\r\n\t\t\t\r\n\t\t\tregister(DARK_LOAM with basicItemBlock)\r\n\t\t\tregister(DARK_LOAM_SLAB with basicItemBlock)\r\n\t\t\t\r\n\t\t\tregister(GRAVE_DIRT_PLAIN with basicItemBlock)\r\n\t\t\tregister(GRAVE_DIRT_LOOT with basicItemBlock)\r\n\t\t\tregister(GRAVE_DIRT_SPIDERLING with basicItemBlock)\r\n\t\t\t\r\n\t\t\tregister(WHITEBARK_LOG with basicItemBlock)\r\n\t\t\tregister(WHITEBARK with basicItemBlock)\r\n\t\t\tregister(WHITEBARK_PLANKS with basicItemBlock)\r\n\t\t\tregister(WHITEBARK_STAIRS with basicItemBlock)\r\n\t\t\tregister(WHITEBARK_SLAB with fuelItemBlock(burnTicks = 150))\r\n\t\t\t\r\n\t\t\tregister(MINERS_BURIAL_BLOCK_PLAIN with basicItemBlock)\r\n\t\t\tregister(MINERS_BURIAL_BLOCK_CHISELED with basicItemBlock)\r\n\t\t\tregister(MINERS_BURIAL_BLOCK_PILLAR with basicItemBlock)\r\n\t\t\tregister(MINERS_BURIAL_BLOCK_JAIL with basicItemBlock)\r\n\t\t\tregister(MINERS_BURIAL_ALTAR with basicItemBlock)\r\n\t\t\t\r\n\t\t\tregister(ENDER_GOO)\r\n\t\t\tregister(PURIFIED_ENDER_GOO)\r\n\t\t\tregister(CAULDRON_ENDER_GOO)\r\n\t\t\tregister(CAULDRON_PURIFIED_ENDER_GOO)\r\n\t\t\tregister(CAULDRON_DRAGONS_BREATH)\r\n\t\t\t\r\n\t\t\tregister(JAR_O_DUST with { ItemBlock(it, itemBlockBaseProps.maxStackSize(1).setTEISR { Callable { ModRendering.RENDER_ITEM_JAR_O_DUST } }) })\r\n\t\t\tregister(DARK_CHEST with { ItemBlock(it, itemBlockBaseProps.setTEISR { Callable { ModRendering.RENDER_ITEM_DARK_CHEST } }) })\r\n\t\t\tregister(LOOT_CHEST with { ItemBlock(it, itemBlockBaseProps.setTEISR { Callable { ModRendering.RENDER_ITEM_LOOT_CHEST } }) })\r\n\t\t\t\r\n\t\t\tregister(PUZZLE_WALL with basicItemBlock)\r\n\t\t\tregister(PUZZLE_PLAIN with basicItemBlock)\r\n\t\t\tregister(PUZZLE_BURST_3 with basicItemBlock)\r\n\t\t\tregister(PUZZLE_BURST_5 with basicItemBlock)\r\n\t\t\tregister(PUZZLE_REDIRECT_1 with basicItemBlock)\r\n\t\t\tregister(PUZZLE_REDIRECT_2 with basicItemBlock)\r\n\t\t\tregister(PUZZLE_REDIRECT_4 with basicItemBlock)\r\n\t\t\tregister(PUZZLE_TELEPORT with basicItemBlock)\r\n\t\t\t\r\n\t\t\tregister(INFUSED_TNT with ItemInfusedTNT(INFUSED_TNT, itemBlockPropsHidden))\r\n\t\t\tregister(IGNEOUS_PLATE with basicItemBlock)\r\n\t\t\tregister(ENHANCED_BREWING_STAND with basicItemBlock)\r\n\t\t\tregister(EXPERIENCE_GATE with basicItemBlock)\r\n\t\t\tregister(EXPERIENCE_GATE_CONTROLLER)\r\n\t\t\t\r\n\t\t\tregister(END_POWDER_ORE with basicItemBlock)\r\n\t\t\tregister(ENDIUM_ORE with basicItemBlock)\r\n\t\t\tregister(STARDUST_ORE with basicItemBlock)\r\n\t\t\tregister(IGNEOUS_ROCK_ORE with basicItemBlock)\r\n\t\t\t\r\n\t\t\tregister(WHITEBARK_LEAVES_AUTUMN_BROWN with basicItemBlock)\r\n\t\t\tregister(WHITEBARK_LEAVES_AUTUMN_ORANGE with basicItemBlock)\r\n\t\t\tregister(WHITEBARK_LEAVES_AUTUMN_YELLOWGREEN with basicItemBlock)\r\n\t\t\tregister(WHITEBARK_SAPLING_AUTUMN_BROWN with fuelItemBlock(burnTicks = 100))\r\n\t\t\tregister(WHITEBARK_SAPLING_AUTUMN_ORANGE with fuelItemBlock(burnTicks = 100))\r\n\t\t\tregister(WHITEBARK_SAPLING_AUTUMN_YELLOWGREEN with fuelItemBlock(burnTicks = 100))\r\n\t\t\tregister(POTTED_WHITEBARK_SAPLING_AUTUMN_BROWN)\r\n\t\t\tregister(POTTED_WHITEBARK_SAPLING_AUTUMN_ORANGE)\r\n\t\t\tregister(POTTED_WHITEBARK_SAPLING_AUTUMN_YELLOWGREEN)\r\n\t\t\t\r\n\t\t\tregister(DEATH_FLOWER_DECAYING with { ItemDeathFlower(it, itemBlockDefaultProps) })\r\n\t\t\tregister(DEATH_FLOWER_HEALED with basicItemBlock)\r\n\t\t\tregister(DEATH_FLOWER_WITHERED with basicItemBlock)\r\n\t\t\tregister(POTTED_DEATH_FLOWER_DECAYING)\r\n\t\t\tregister(POTTED_DEATH_FLOWER_HEALED)\r\n\t\t\tregister(POTTED_DEATH_FLOWER_WITHERED)\r\n\t\t\t\r\n\t\t\tregister(ANCIENT_COBWEB with { ItemAncientCobweb(it, itemBlockDefaultProps) })\r\n\t\t\tregister(DRY_VINES with basicItemBlock)\r\n\t\t\tregister(ENDERMAN_HEAD)\r\n\t\t\t\r\n\t\t\tregister(SPAWNER_OBSIDIAN_TOWERS)\r\n\t\t\t\r\n\t\t\tregister(END_PORTAL_INNER)\r\n\t\t\tregister(END_PORTAL_FRAME with basicItemBlock)\r\n\t\t\tregister(END_PORTAL_ACCEPTOR with basicItemBlock)\r\n\t\t\tregister(VOID_PORTAL_INNER)\r\n\t\t\tregister(VOID_PORTAL_FRAME with basicItemBlock)\r\n\t\t\tregister(VOID_PORTAL_STORAGE with basicItemBlock)\r\n\t\t\tregister(VOID_PORTAL_FRAME_CRAFTED with hiddenItemBlock)\r\n\t\t\tregister(VOID_PORTAL_STORAGE_CRAFTED with hiddenItemBlock)\r\n\t\t\t\r\n\t\t\tregister(ENERGY_CLUSTER with basicItemBlock)\r\n\t\t\tregister(CORRUPTED_ENERGY)\r\n\t\t\t\r\n\t\t\tregister(TABLE_PEDESTAL with basicItemBlock)\r\n\t\t\tregister(TABLE_BASE_TIER_1 with basicItemBlock)\r\n\t\t\tregister(TABLE_BASE_TIER_2 with basicItemBlock)\r\n\t\t\tregister(TABLE_BASE_TIER_3 with basicItemBlock)\r\n\t\t\tregister(ACCUMULATION_TABLE_TIER_1 with basicItemBlock)\r\n\t\t\tregister(ACCUMULATION_TABLE_TIER_2 with basicItemBlock)\r\n\t\t\tregister(ACCUMULATION_TABLE_TIER_3 with basicItemBlock)\r\n\t\t\t\r\n\t\t\tregister(ETERNAL_FIRE)\r\n\t\t\tregister(SCAFFOLDING with basicItemBlock)\r\n\t\t}\r\n\t\t\r\n\t\t// vanilla modifications\r\n\t\t\r\n\t\twith(e.registry){\r\n\t\t\tregister(BlockEndPortalOverride(buildEndPortalOverride).apply { override(Blocks.END_PORTAL){ null } })\r\n\t\t\tregister(BlockBrewingStandCustom(buildBrewingStand).apply { override(Blocks.BREWING_STAND){ ItemBlock(it, Item.Properties().group(ItemGroup.BREWING)) } })\r\n\t\t\tregister(BlockDragonEggOverride(buildDragonEgg).apply { override(Blocks.DRAGON_EGG){ ItemDragonEgg(it, itemBlockDefaultProps) } })\r\n\t\t}\r\n\t}\r\n\t\r\n\t@SubscribeEvent\r\n\tfun onRegisterItemBlocks(e: RegistryEvent.Register<Item>){\r\n\t\ttemporaryItemBlocks.forEach(e.registry::register)\r\n\t\ttemporaryItemBlocks.clear()\r\n\t\t\r\n\t\t// fire\r\n\t\t\r\n\t\twith(Blocks.FIRE as BlockFire){\r\n\t\t\tsetFireInfo(WHITEBARK_LOG, 5, 5)\r\n\t\t\tsetFireInfo(WHITEBARK, 5, 5)\r\n\t\t\tsetFireInfo(WHITEBARK_PLANKS, 5, 20)\r\n\t\t\tsetFireInfo(WHITEBARK_STAIRS, 5, 20)\r\n\t\t\tsetFireInfo(WHITEBARK_SLAB, 5, 20)\r\n\t\t\t\r\n\t\t\tsetFireInfo(WHITEBARK_LEAVES_AUTUMN_BROWN, 30, 60)\r\n\t\t\tsetFireInfo(WHITEBARK_LEAVES_AUTUMN_ORANGE, 30, 60)\r\n\t\t\tsetFireInfo(WHITEBARK_LEAVES_AUTUMN_YELLOWGREEN, 30, 60)\r\n\t\t\t\r\n\t\t\tsetFireInfo(INFUSED_TNT, 15, 100)\r\n\t\t\t\r\n\t\t\tsetFireInfo(ANCIENT_COBWEB, 100, 300)\r\n\t\t\tsetFireInfo(DRY_VINES, 100, 300)\r\n\t\t}\r\n\t\t\r\n\t\t// vanilla modifications\r\n\t\t\r\n\t\tBlocks.END_PORTAL_FRAME.asItem().group = null\r\n\t}\r\n\t\r\n\t// Utilities\r\n\t\r\n\tprivate val temporaryItemBlocks = mutableListOf<ItemBlock>()\r\n\t\r\n\tprivate inline fun Block.override(vanillaBlock: Block, itemBlockConstructor: ((Block) -> ItemBlock?)){\r\n\t\tthis.useVanillaName(vanillaBlock)\r\n\t\titemBlockConstructor(this)?.let { with(it) }\r\n\t}\r\n\t\r\n\tprivate infix fun Block.with(itemBlock: ItemBlock) = apply {\r\n\t\tif (Resource.isVanilla(this.registryName!!)){\r\n\t\t\titemBlock.useVanillaName(this)\r\n\t\t}\r\n\t\telse{\r\n\t\t\titemBlock.registryName = this.registryName\r\n\t\t}\r\n\t\t\r\n\t\ttemporaryItemBlocks.add(itemBlock)\r\n\t\t(itemBlock.group as? OrderedCreativeTab)?.registerOrder(itemBlock)\r\n\t}\r\n\t\r\n\tprivate infix fun <T : Block> T.with(itemBlockConstructor: (T) -> ItemBlock): Block{\r\n\t\treturn with(itemBlockConstructor(this))\r\n\t}\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/chylex/hee/init/ModBlocks.kt	(revision 41aa0b6695a1ac98e2d75beae7cb260618fe1f25)
+++ src/main/java/chylex/hee/init/ModBlocks.kt	(date 1579752487117)
@@ -41,6 +41,7 @@
 import chylex.hee.game.block.BlockPillarCustom
 import chylex.hee.game.block.BlockPuzzleLogic
 import chylex.hee.game.block.BlockScaffolding
+import chylex.hee.game.block.BlockShulkerBoxOverride
 import chylex.hee.game.block.BlockSimple
 import chylex.hee.game.block.BlockSimpleShaped
 import chylex.hee.game.block.BlockSimpleWithMapColor
@@ -130,6 +131,7 @@
 import chylex.hee.system.migration.forge.SubscribeAllEvents
 import chylex.hee.system.migration.forge.SubscribeEvent
 import chylex.hee.system.migration.vanilla.BlockFire
+import chylex.hee.system.migration.vanilla.BlockShulkerBox
 import chylex.hee.system.migration.vanilla.BlockWall
 import chylex.hee.system.migration.vanilla.Blocks
 import chylex.hee.system.migration.vanilla.ItemBlock
@@ -137,8 +139,10 @@
 import chylex.hee.system.util.named
 import chylex.hee.system.util.useVanillaName
 import net.minecraft.block.Block
+import net.minecraft.block.Block.Properties
 import net.minecraft.block.material.MaterialColor
 import net.minecraft.fluid.Fluid
+import net.minecraft.item.DyeColor
 import net.minecraft.item.Item
 import net.minecraft.item.ItemGroup
 import net.minecraft.util.math.AxisAlignedBB
@@ -524,6 +528,11 @@
 			register(BlockEndPortalOverride(buildEndPortalOverride).apply { override(Blocks.END_PORTAL){ null } })
 			register(BlockBrewingStandCustom(buildBrewingStand).apply { override(Blocks.BREWING_STAND){ ItemBlock(it, Item.Properties().group(ItemGroup.BREWING)) } })
 			register(BlockDragonEggOverride(buildDragonEgg).apply { override(Blocks.DRAGON_EGG){ ItemDragonEgg(it, itemBlockDefaultProps) } })
+			
+			for(color in DyeColor.values()){
+				val block = BlockShulkerBox.getBlockByColor(color)
+				register(BlockShulkerBoxOverride(Properties.from(block), color).apply { override(block){ ItemBlock(it, Item.Properties().maxStackSize(1).group(ItemGroup.DECORATIONS)) } })
+			}
 		}
 	}
 	
